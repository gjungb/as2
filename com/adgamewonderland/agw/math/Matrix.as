/* 
 * Generated by ASDT 
*/ 

import com.adgamewonderland.agw.math.*;

class com.adgamewonderland.agw.math.Matrix {
	
	private var myColumns:Array;
	
	public function Matrix()
	{
		// spalten der matrix (als ColumnVector)
		myColumns = new Array();
		
	}
	
	public function addColumn(cv:ColumnVector ):Void
	{
		// spalte hinzufuegen
		myColumns.push(cv);
	}
	
	public function getColumn(col:Number ):ColumnVector
	{
		// vector in uebergebener spalte (1-basiert)
		return myColumns[col - 1];
	}
	
	public function getElement(col:Number, row:Number ):Number
	{
		// element in uebergebener spalte und zeile (1-basiert)
		return getColumn(col).getElement(row);
	}
	
	public function getDeterminant():Number
	{
		// TODO: unterscheidung der groessen der matrix
		return getDeterminantThree();
	}
	
	private function getDeterminantThree():Number
	{
		// berechnung nach der "regel von sarrus" (Gellrich / Gellrich, S. 54)
		// det(A) = a11a22a33+a12a23a31+a13a21a32-a13a22a31-a11a23a32-a12a21a33
		
		// a11a22a33
		var f1:Number = getElement(1, 1) * getElement(2, 2) * getElement(3, 3);
		// a12a23a31
		var f2:Number = getElement(1, 2) * getElement(2, 3) * getElement(3, 1);
		// a13a21a32
		var f3:Number = getElement(1, 3) * getElement(2, 1) * getElement(3, 2);
		// a13a22a31
		var f4:Number = getElement(1, 3) * getElement(2, 2) * getElement(3, 1);
		// a11a23a32
		var f5:Number = getElement(1, 1) * getElement(2, 3) * getElement(3, 2);
		// a12a21a33
		var f6:Number = getElement(1, 2) * getElement(2, 1) * getElement(3, 3);
		
		// gesuchte determinante
		var det:Number = f1 + f2 + f3 - f4 - f5 - f6;
		
		// zurueck geben
		return det;
	}
}