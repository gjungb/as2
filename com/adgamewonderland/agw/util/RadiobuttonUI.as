/*
 * Generated by ASDT
*/

import com.adgamewonderland.agw.util.IEventBroadcaster;
import com.adgamewonderland.agw.util.EventBroadcaster;

class com.adgamewonderland.agw.util.RadiobuttonUI extends MovieClip implements IEventBroadcaster {

	private var _event:EventBroadcaster;

	// Attributes

	private var myStatus:Boolean;

	private var bullet_mc:MovieClip;

	private var radio_mc:MovieClip;

	// Operations

	// konstruktor
	public function RadiobuttonUI()
	{
		// status des radiobuttons
		status = false;
		// status wechseln
		radio_mc.onRelease = function () {
			this._parent.switchStatus();
		};
		// event handling
		this._event = new EventBroadcaster();
		// aenderungen ueberwachen
//		this.watch("myStatus", onStatusChanged, null);
	}

	public function set status(bool:Boolean ):Void
	{
		// status des radiobuttons
		myStatus = bool;
		// kreuz ein- / ausblenden
		bullet_mc._visible = bool;
		// nur anklickbar, wenn nicht aktiv
		setEnabled(!bool);
	}

	public function get status():Boolean
	{
		// status der radiobutton
		return (myStatus);
	}

	public function switchStatus():Void
	{
		// status wechseln
		status = !status;
		// listener informieren
		_event.send("onRadiobuttonChecked", this, status);
	}

	public function setEnabled(bool:Boolean ):Void
	{
		// an- / ausschalten
		radio_mc.enabled = bool;
	}

	public function getStatus():Boolean {
		return myStatus;
	}

	public function setStatus(status:Boolean ):Void {
		this.myStatus = status;
	}

	public function addListener(l : Object) : Void {
		// als listener registrieren
		this._event.addListener(l);
	}

	public function removeListener(l : Object) : Void {
		// als listener abmelden
		this._event.removeListener(Object(l));
	}

	public function onStatusChanged(prop:String, oldval:Boolean, newval:Boolean ):Boolean
	{
		// listener informieren
		_event.send("onRadiobuttonChecked", this, newval);
		// neuer status
		return newval;
	}
}