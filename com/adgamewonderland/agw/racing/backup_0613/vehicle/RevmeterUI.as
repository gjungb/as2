/* 
 * Generated by ASDT 
*/ 

/*
klasse:			RevmeterUI
autor: 			gerd jungbluth, adgame-wonderland
email:			gerd.jungbluth@adgame-wonderland.de
kunde:			agw
erstellung: 		02.06.2005
zuletzt bearbeitet:	07.06.2005
durch			gj
status:			in bearbeitung
*/

import com.adgamewonderland.agw.physics.*;

class com.adgamewonderland.agw.racing.vehicle.RevmeterUI extends MovieClip implements Strokable {
	
	private static var ANGLE_MIN:Number = 0;
	
	private static var ANGLE_MAX:Number = 270;

	private static var ANGLE_ATTENUATION:Number = 4;
	
	private static var RPM_MIN:Number = 1000;
	
	private static var RPM_MAX:Number = 8000;
	
	private var myRpm:Number;
	
	private var myStroke:StrokeUI;
	
	private var needle_mc:MovieClip;
	
	private var digits_mc:MovieClip;
	
	private var rpm_txt:TextField;
	
	public function RevmeterUI()
	{
		// aktuelle drehzahl
		myRpm = 0;
		// geschwindigkeitsanzeige
		rpm_txt.autoSize = "right";
		// taktgeber
		myStroke = _global.Stroke;
		// beim taktgeber anmelden
		myStroke.addListener(this);
	}
	
	public function set rpm(rnum:Number ):Void
	{
		// aktuelle drehzahl
		myRpm = rnum;
	}
	
	public function onUpdateStroke():Void
	{
		// frame in digitaler anzeige
		var frame:Number = Math.round(digits_mc._totalframes * myRpm);
		// hinspringen
		digits_mc.gotoAndStop(frame);
		// zahl fuer anzeige
		var rpm:Number = Math.round(RPM_MIN + myRpm * RPM_MAX);
		// anzeigen
		rpm_txt.text = String(rpm);
//		// gewuenschte drehung der nadel
//		var angle:Number = ANGLE_MIN + myRpm * (ANGLE_MAX - ANGLE_MIN);
//		
////		needle_mc._rotation = angle;
////		return;
//		// differenz zur aktuellen drehung
//		var diff:Number = angle - needle_mc._rotation;
//		// gedaempft drehen
//		needle_mc._rotation += diff / ANGLE_ATTENUATION;
	}
}