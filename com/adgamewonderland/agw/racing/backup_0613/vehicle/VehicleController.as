/* 
 * Generated by ASDT 
*/ 

/*
klasse:			VehicleController
autor: 			gerd jungbluth, adgame-wonderland
email:			gerd.jungbluth@adgame-wonderland.de
kunde:			agw
erstellung: 		20.05.2005
zuletzt bearbeitet:	29.05.2005
durch			gj
status:			in bearbeitung
*/

import com.adgamewonderland.agw.math.*;

import com.adgamewonderland.agw.racing.race.*;

import com.adgamewonderland.agw.racing.track.*;

import com.adgamewonderland.agw.racing.vehicle.*;

class com.adgamewonderland.agw.racing.vehicle.VehicleController {
	
	public static var TRACKPIECE_PREV:Number = 0;
	
	public static var TRACKPIECE_CURRENT:Number = 1;
	
	public static var TRACKPIECE_NEXT:Number = 2;
	
	private var myVehicle:Vehicle;
	
	private var myTrackpieces:Array;
	
	public function VehicleController(vobj:Vehicle )
	{
		// gesteuertes fahrzeug
		myVehicle = vobj;
		// streckenteile
		myTrackpieces = new Array(3);
	}
	
	public function setTrackpiece(type:Number, tobj:TrackPiece ):Void
	{
		// speichern
		myTrackpieces[type] = tobj;
	}
	
	public function getTrackpiece(type:Number ):TrackPiece
	{
		//  zurueck geben
		return myTrackpieces[type];
	}
	
	public function isVehicleOnTrack():Boolean
	{
		// position des fahrzeugs
		var pos:Point = myVehicle.position;
		// streckenteil an dieser position
		var trackpiece:TrackPiece = RaceController.getInstance().getTrackpieceByPoint(pos);
		// nicht auf strecke, wenn kein streckenteil gefunden oder auf streckenteil, das nicht befahren werden darf
		if (trackpiece == null || trackpiece.type == TrackPiece.TYPE_OFFROAD) return false;
		
		// testen, ob streckenteil gewechselt
		if (trackpiece != getTrackpiece(VehicleController.TRACKPIECE_CURRENT)) {
			// als aktuelles streckenteil speichern
			setTrackpiece(VehicleController.TRACKPIECE_CURRENT, trackpiece);
			// controller updaten
			updateVehicleController(0);
		}
		// auf strecke
		return true;
	}
	
	public function isVehicleOffRoad():Boolean
	{
		// position des fahrzeugs
		var pos:Point = myVehicle.position;
		// streckenteil an dieser position
		var trackpiece:TrackPiece = RaceController.getInstance().getTrackpieceByPoint(pos);
		// nicht verboten, wenn kein streckenteil gefunden oder befahren erlaubt
		if (trackpiece == null || trackpiece.type == TrackPiece.TYPE_ROAD) return false;
		
		// befahren nicht erlaubt
		return true;
	}
	
	public function updateVehicleController(direction:Number ):Void
	{
		// id des aktuellen streckenteils
		var id:Number = Number(getTrackpiece(VehicleController.TRACKPIECE_CURRENT).id);
		// rennstrecke
		var track:Track = RaceController.getInstance().track;
		// laenge der strasse
		var max:Number = track.getNumTrackpieces();
		
		// verschieben
		var current:Number = id + direction;
		// testen, ob oben raus
		if (current == max) current = 0;
		// testen, ob unten raus
		if (current < 0) current = max;
		
		// naechst hoeheres
		var next:Number = current - (-1);
		// testen, ob oben raus
		if (next == max) next = 0;
		
		// naechst niedrigeres
		var prev:Number = current - 1;
		// testen, ob unten raus
		if (prev < 0) prev = max;
		
		// aktualisieren
		setTrackpiece(VehicleController.TRACKPIECE_CURRENT, track.getTrackpieceById(current));
		setTrackpiece(VehicleController.TRACKPIECE_NEXT, track.getTrackpieceById(next));
		setTrackpiece(VehicleController.TRACKPIECE_PREV, track.getTrackpieceById(prev));
		// fahrzeug informieren
		myVehicle.onChangeTrackpiece();
		
//		trace("prev: " + prev + ", current: " + current + ", next: " + next);
	}
	
//	public function isVehicleOnTrack():Boolean
//	{
//		// position des fahrzeugs
//		var pos:Point = myVehicle.position;
//		// funktion, ob fahrzeug auf streckenteil
//		var ipot:Function = RaceController.getInstance().isPointOnTrackpiece;
//		// testen, ob auf aktuellem streckenteil
//		if (ipot(pos, getTrackpiece(VehicleController.TRACKPIECE_CURRENT))) {
//			// erfolgreich
//			return true;
//			
//		// testen, ob auf naechstem streckenteil
//		} else if (ipot(pos, getTrackpiece(VehicleController.TRACKPIECE_NEXT))) {
//			// streckenteile aktualisieren
//			updateVehicleController(1);
//			// erfolgreich
//			return true;
//		
//		// testen, ob auf letztem streckenteil	
//		} else if (ipot(pos, getTrackpiece(VehicleController.TRACKPIECE_PREV))) {
//			// streckenteile aktualisieren
//			updateVehicleController(-1);
//			// erfolgreich
//			return true;
//		}
//		
//		// nicht auf strecke
//		return false;
//	}
}