/* Login** Generated from ArgoUML Model** ActionScript 2 generator module provided by www.codealloy.com *//*klasse:			Loginautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			tomorrow-focuserstellung: 		21.04.2004 (e-plus)zuletzt bearbeitet:	10.11.2004durch			gjstatus:			in bearbeitung*/import com.meychi.MD5;import com.adgamewonderland.agw.*;import com.adgamewonderland.tomorrowfocus.olympia.User;class com.adgamewonderland.tomorrowfocus.olympia.Login extends MovieClip {	// Attributes	private var myUser:User;	private var myXMLConnector:XMLConnector;	private var myFormprocessor:Formprocessor;	private var myPassword:String;	private var mySex:String;	private var myOptin:Number, myVoucher:Number;	private var myLso:SharedObject;	private var email_txt:TextField, password_txt:TextField, newpwd1_txt:TextField, newpwd2_txt:TextField, message_txt:TextField;	private var nickname_txt:TextField, firstname_txt:TextField, lastname_txt:TextField, street_txt:TextField, housenumber_txt:TextField, postcode_txt:TextField, city_txt:TextField, day_txt:TextField, month_txt:TextField, year_txt:TextField, phone_txt:TextField;	private var blind_btn:Button, login_mc:MovieClip, cancel_mc:MovieClip, register_mc:MovieClip, registertxt_mc:MovieClip, close_mc:MovieClip;	private var sex1_mc:MovieClip, sex2_mc:MovieClip, optin_mc:MovieClip, voucher_mc:MovieClip;	private var myButtons:Array;	private var myInterval:Number;	// Operations	public  function Login()	{		// user (mit leerer email)		myUser = new User("");		// xml connector offline / online		if (_root._url.indexOf("http://") == -1) {			myXMLConnector = new XMLConnector(this, "http://www.adgame-wonderland.de/hosting/tomorrow-focus/weihnachten2007/focussnowball_xmlconnector.php");		} else {			myXMLConnector = new XMLConnector(this, "focussnowball_xmlconnector.php");		}		// form processor		myFormprocessor = new Formprocessor();		// password		myPassword = "";		// anrede		mySex = "";		// optin		myOptin = 1;		// voucher		myVoucher = 0;		// lso zum speichern / laden der email		myLso = SharedObject.getLocal("focussnowball");		// buttons initialisieren		initButtons();	}	// buttons initialisieren	public function initButtons():Void	{		// array mit buttons		myButtons = [login_mc, register_mc, cancel_mc];		// aktivieren// 		active = true;		// login formular initalisieren		initForm("init");	}	public  function showButtons(bool:Boolean ):Void	{		// schleife ueber alle buttons		for (var i:String in myButtons) myButtons[i]._visible = bool;	}	public  function initForm(form:String ):Void	{		// interval loeschen		clearInterval(myInterval);		// je nach formular		switch (form) {			// anfang			case "init" :				// hinspringen				gotoAndStop("frInit");				// callback beim druecken von "login"				login_mc.onRelease = function () {					// hinspringen (initForm wird auf zeitleiste aufgerufen)					this._parent.gotoAndStop("frLogin");// 					this._parent.initForm("login");				};				// callback beim druecken von "register"				register_mc.onRelease = function () {					// hinspringen (initForm wird auf zeitleiste aufgerufen)					this._parent.gotoAndStop("frRegister");// 					this._parent.initForm("register");				};				break;			// login			case "login" :				// hinspringen// 				gotoAndStop("frLogin");				// blind button				blind_btn.useHandCursor = false;				// email und password als eingabefelder				email_txt.selectable = password_txt.selectable = true;				email_txt.type = password_txt.type = "input";				// gespeicherte email laden				email_txt.text = (typeof myLso.data.email != "undefined" ? myLso.data.email : email_txt.text);				// callback beim druecken von "abbrechen"				cancel_mc.onRelease = function () {					// formular initialisieren					this._parent.initForm("init");					// zur spielauswahl					_global.Playground.exitGame();				};				// callback beim druecken von "login"				login_mc.onRelease = function () {					this._parent.sendLogin();				};				// callback beim druecken von "register"				register_mc.onRelease = function () {					// hinspringen (initForm wird auf zeitleiste aufgerufen)					this._parent.gotoAndStop("frRegister");// 					this._parent.initForm("register");				};				// nach der registrierung				if (myInterval) {					// nachricht					showMessage("Ihre Registrierung war erfolgreich!");					// button "registrieren" ausblenden					register_mc._visible = false;					// text "zum registrieren" ausblenden					registertxt_mc._visible = false;				}				break;			// register			case "register" :				// hinspringen// 				gotoAndStop("frRegister");				// blind button				blind_btn.useHandCursor = false;				// postleitzahl auf ziffern beschraenken				postcode_txt.restrict = "0123456789";				// geburtstag auf ziffern beschraenken				day_txt.restrict = month_txt.restrict = year_txt.restrict = "0123456789";				// tab reihenfolge				var index:Number = 0;				email_txt.tabIndex = ++index;				nickname_txt.tabIndex = ++index;				newpwd1_txt.tabIndex = ++index;				newpwd2_txt.tabIndex = ++index;				firstname_txt.tabIndex = ++index;				lastname_txt.tabIndex = ++index;				street_txt.tabIndex = ++index;				housenumber_txt.tabIndex = ++index;				postcode_txt.tabIndex = ++index;				city_txt.tabIndex = ++index;				day_txt.tabIndex = ++index;				month_txt.tabIndex = ++index;				year_txt.tabIndex = ++index;				phone_txt.tabIndex = ++index;				// callback beim druecken von "abbrechen"				cancel_mc.onRelease = function () {					this._parent.initForm("init");				};				// callback beim druecken von "register"				register_mc.onRelease = function () {					this._parent.sendRegister();				};				break;			// loggedin			case "loggedin" :				// hinspringen				gotoAndStop("frLoggedin");				// nicknamen anzeigen				nickname_txt.autoSize = "left";				nickname_txt.text = myUser.nickname;				break;		}		// button aktivieren// 		active = true;	}	public function switchSex(mc:MovieClip ):Void	{		// welche der beiden boxen		if (mc == sex1_mc) {			// herr			mySex = "Herr";			// umschalten			sex2_mc.gotoAndStop(1);		} else if (mc == sex2_mc) {			// frau			mySex = "Frau";			// umschalten			sex1_mc.gotoAndStop(1);		} else {			// weder noch			mySex = "";			// umschalten			sex1_mc.gotoAndStop(1);			// umschalten			sex2_mc.gotoAndStop(1);		}	}	public function switchOptin(optin:Number ):Void	{		// optin umschalten		myOptin = optin;	}	public function switchVoucher(voucher:Number ):Void	{		// voucher umschalten		myVoucher = voucher;	}	private function checkForm(type:String ):Boolean	{		// je nach formular		switch (type) {			// login			case "login" :				// validieren, ob 1. korrekte email adresse, 2. nicht leeres passwort				var errors:Array = myFormprocessor.checkForm([3, "E-Mail", email_txt.text, 1, "Passwort", password_txt.text]);				// testen, ob fehler gefunden				if (errors.length != 0) {					// nachricht					showMessage("Bitte füllen Sie alle Felder korrekt aus!");					// abbrechen					return false;				}				// alles in ordnung				return true;				break;			// register			case "register" :				// validieren				var errors:Array = myFormprocessor.checkForm([3, "E-Mail", email_txt.text, 1, "Nickname", nickname_txt.text, 1, "Passwort 1", newpwd1_txt.text, 1, "Passwort 2", newpwd2_txt.text, 1, "Anrede", mySex, 1, "Vorname", firstname_txt.text, 1, "Nachname", lastname_txt.text, 1, "Strasse", street_txt.text, 1, "Hausnummer", housenumber_txt.text, 1, "Postleitzahl", postcode_txt.text, 1, "Stadt", city_txt.text, 1, "Geburtstag", (day_txt.text + month_txt.text + year_txt.text), 1, "Telefon", phone_txt.text]);				// testen, ob fehler gefunden				if (errors.length != 0) {					// nachricht					showMessage("Bitte füllen Sie alle Felder korrekt aus!");					// abbrechen					return false;				} else if (newpwd1_txt.text != newpwd2_txt.text) {					// nachricht					showMessage("Die Passwörter sind nicht identisch!");					// abbrechen					return false;				}				// alles in ordnung				return true;				break;		}	}	private  function sendLogin():Void	{		// eingaben testen		if (checkForm("login") == false) return;		// email und password duerfen nicht editiert werden		email_txt.selectable = password_txt.selectable = false;		email_txt.type = password_txt.type = "dynamic";		// button deaktivieren// 		active = false;		// eingegebenes password MD5en		var password:String = MD5.calculate(password_txt.text);		// xml head		var head:XML = myXMLConnector.getXMLHead("focussnowball", {obj:"loginProcessor"});		// infos ueber user		var node:XMLNode = myXMLConnector.getXMLNode("user", {email:email_txt.text, password:password});		// einhaengen		head.firstChild.appendChild(node);		// senden und empfangen		myXMLConnector.sendXML(head, "onLoginLoaded");		// nachricht anzeigen		showMessage("Ihre Daten werden gesendet!");	}	public  function onLoginLoaded(xmlobj:XML ):Void	{		// infos ueber user		var user:XMLNode = xmlobj.firstChild.firstChild;		// in object umformen		var info:Object = myXMLConnector.parseXMLNode(user);		// erfolgreich oder nicht		switch (Boolean(info["loginstatus"])) {			// erfolgreich			case true:				// email				myUser.email = email_txt.text;				// email lokal speichern				myLso.data.email = myUser.email;				// speichern				myLso.flush();				// userid				myUser.userid = info["userid"];				// nickname				myUser.nickname = info["nickname"];				// loginstatus				myUser.loginstatus = Boolean(info["loginstatus"]);				// timestamp				myUser.timestamp = Number(info["timestamp"]);				// nachricht anzeigen				showMessage("Das Login war erfolgreich!");				// password speichern				myUser.password = MD5.calculate(password_txt.text);				// user an spiel uebergeben und fertig				_global.Playground.loginUser(myUser);				// nach kurzer pause nickname einblenden				myInterval = setInterval(this, "initForm", 400, "loggedin");				break;			// nicht erfolgreich			default:				// interval loeschen				delete(myInterval);				// nachricht anzeigen				showMessage("Das Login ist fehlgeschlagen!");				// formular einblenden				initForm("login");		}	}	private  function sendRegister():Void	{		// eingaben testen		if (checkForm("register") == false) return;		// button deaktivieren// 		active = false;		// eingegebenes password verschluesseln		var password:String = DES.calculate("e0a35c4e9ac9af15b309ae5d", newpwd1_txt.text, true);		// xml head		var head:XML = myXMLConnector.getXMLHead("focussnowball", {obj:"registerProcessor"});		// infos ueber user		var node:XMLNode = myXMLConnector.getXMLNode("user", {email:email_txt.text, nickname : nickname_txt.text, password : password, sex : mySex, firstname : firstname_txt.text, lastname : lastname_txt.text, street : (street_txt.text + " " + housenumber_txt.text), postcode : postcode_txt.text, city : city_txt.text, birthday : (year_txt.text + "-" + month_txt.text + "-" + day_txt.text), phone : phone_txt.text, optin : myOptin, voucher : myVoucher, referrer : _global.Playground.getReportingProcessor().getReferrer()});		head.firstChild.appendChild(node);		// senden und empfangen		myXMLConnector.sendXML(head, "onRegisterLoaded");		// nachricht anzeigen		showMessage("Ihre Daten werden gesendet!");	}	public  function onRegisterLoaded(xmlobj:XML ):Void	{		// infos ueber user		var user:XMLNode = xmlobj.firstChild.firstChild;		// in object umformen		var info:Object = myXMLConnector.parseXMLNode(user);		// erfolgreich oder nicht		switch (Number(info["registerstatus"])) {			// erfolgreich			case 1:				// email				myUser.email = email_txt.text;				// email lokal speichern				myLso.data.email = myUser.email;				// speichern				myLso.flush();				// nachricht anzeigen				showMessage("Ihre Registrierung war erfolgreich!");				// nach kurzer pause formular einblenden				myInterval = setInterval(this, "gotoAndStop", 2000, "frLogin");				break;			// user bereits registriert			case 2 :				// nachricht anzeigen				showMessage("E-Mail Adresse bereits registriert!");				break;			// nicht erfolgreich			default:				// nachricht anzeigen				showMessage("Ihre Registrierung war nicht erfolgreich!");		}	}	private  function showMessage(msg:String ):Void	{		// anzeigen		message_txt.html = true;		message_txt.autoSize = "center";		message_txt.multiline = true;		message_txt.htmlText = msg;	}} /* end class Login */