/* * Generated by ASDT*//*klasse:			LoginUIautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			ssk ddorferstellung: 		06.09.2005zuletzt bearbeitet:	06.09.2005durch			gjstatus:			in bearbeitung*/import mx.rpc.FaultEvent;import mx.rpc.ResultEvent;import com.adgamewonderland.agw.Formprocessor;import com.adgamewonderland.agw.util.TimelineFollower;import com.adgamewonderland.sskddorf.slotmachine.connectors.UserConnector;import com.adgamewonderland.sskddorf.slotmachine.controllers.GameController;import com.adgamewonderland.sskddorf.slotmachine.ui.SlotmachineUI;import com.meychi.MD5;class com.adgamewonderland.sskddorf.slotmachine.ui.LoginUI extends MovieClip {	private var mySlotmachineUI:SlotmachineUI;	private var myLso:SharedObject;	private var email_txt:TextField;	private var password_txt:TextField;	private var message_txt:TextField;	private var login_btn:Button;	private var register_btn:Button;	public function LoginUI()	{		// hauptzeitleiste		mySlotmachineUI = SlotmachineUI(_parent);		// lso zum speichern / laden der email		myLso = SharedObject.getLocal("slotmachine");		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "init");		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		};	}	public function init():Void	{	 	// button login	 	login_btn.onRelease = function () {	 		this._parent.sendLogin();	 	};	 	// button register	 	register_btn.onRelease = function () {	 		this._parent.showRegister();	 	};	 	// key login	 	var klsnr:Object = {_parent : this};	 	klsnr.onKeyUp = function () {	 		if (Key.getCode() == Key.ENTER) this._parent.sendLogin();	 	};	 	Key.addListener(klsnr);		// gespeicherte email laden		email_txt.text = (typeof myLso.data.email != "undefined" ? myLso.data.email : email_txt.text);	}	public function showRegister():Void	{		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onLoginFinished", SlotmachineUI.NEXT_REGISTER);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		};		// abspielen		gotoAndPlay("frClose");	}	public function sendLogin():Void	{		// email		var email:String = email_txt.text.toLowerCase();		// password		var password:String = password_txt.text;		// validieren, ob 1. korrekte email adresse, 2. nicht leeres passwort		var errors:Array = (new Formprocessor()).checkForm([3, "E-Mail", email, 1, "Passwort", password]);		// testen, ob fehler gefunden		if (errors.length != 0) {			// nachricht			message_txt.text = "Eingaben nicht korrekt!";			// abbrechen			return;		}		// meldung anzeigen		message_txt.text = "Daten werden gesendet!";		// button ausblenden		login_btn._visible = false;		// userdaten laden lassen		UserConnector.loginUser(email, MD5.calculate(password), this, "onUserLoaded");	}	public function onUserLoaded(re:ResultEvent ):Void	{		// uid		var uid:Number = Number(re.result);		// testen, ob login erfolgreich		if (uid == 0) {			// meldung anzeigen			message_txt.text = "Login fehlgeschlagen!";			// button einblenden			login_btn._visible = true;			// abbrechen			return;		}		// meldung anzeigen		message_txt.text = "Login erfolgreich!";		// email lokal speichern		myLso.data.email = email_txt.text;		// speichern		myLso.flush();		// einloggen		GameController.getInstance().onLoginUser(uid);		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onLoginFinished", SlotmachineUI.NEXT_PHRASE);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		};		// abspielen		gotoAndPlay("frClose");	}	public function onLoginFinished(next:Number ):Void	{		// zur phrase		if (next == SlotmachineUI.NEXT_PHRASE) {			mySlotmachineUI.showPhrase();		// zur registrierung		} else if (next == SlotmachineUI.NEXT_REGISTER) {			mySlotmachineUI.showRegister();		}	}	public function onConnectorFault(fe:FaultEvent ):Void	{		trace("There was a problem: " + fe.fault.faultstring);	   	trace("The faultcode is: " + fe.fault.faultcode);	 	trace("The detail: " + fe.fault.detail);	   	trace("The error class name is: " + fe.fault.type);	}} /* end class LoginUI */