 /* * Generated by ASDT*//*klasse:			PhraseUIautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			ssk ddorferstellung: 		07.09.2005zuletzt bearbeitet:	14.09.2005durch			gjstatus:			in bearbeitung*/import mx.rpc.ResultEvent;import com.adgamewonderland.agw.Formprocessor;import com.adgamewonderland.agw.util.TimelineFollower;import com.adgamewonderland.sskddorf.slotmachine.connectors.GameConnector;import com.adgamewonderland.sskddorf.slotmachine.controllers.GameController;import com.adgamewonderland.sskddorf.slotmachine.ui.MessageUI;import com.adgamewonderland.sskddorf.slotmachine.ui.SlotmachineUI;class com.adgamewonderland.sskddorf.slotmachine.ui.PhraseUI extends MovieClip {	private static var ERROR_NONE:Number = 0;	private static var ERROR_UNKNOWN:Number = 1;	private static var ERROR_PHRASE_UNKNOWN:Number = 2;	private static var ERROR_PHRASE_USED:Number = 3;	private var mySlotmachineUI:SlotmachineUI;	private var phrase_txt:TextField;	private var message_mc:MessageUI;	private var send_btn:Button;	public function PhraseUI()	{		// hauptzeitleiste		mySlotmachineUI = SlotmachineUI(_parent);		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "init");		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		};	}	public function init():Void	{		// button ausblenden		send_btn._visible = false;	 	// pruefen, ob user heute noch spielen darf		// uid		var uid:Number = GameController.getInstance().getUid();		// anzahl noch verbleibender partien laden lassen		GameConnector.getNumGames(uid, this, "onNumGamesLoaded");	}	public function onNumGamesLoaded(re:ResultEvent ):Void	{		// anzahl noch verbleibender spielpartien		var numgames:Number = Number(re.result);		// testen, ob noch spiele erlaubt		if (numgames > 0) {		 	// button send		 	send_btn.onRelease = function () {		 		this._parent.sendPhrase();		 	};			// button einblenden			send_btn._visible = true;		} else {			// meldung anzeigen			message_mc.showMessage("Heute verbleibt Ihnen kein Versuch mehr. Stellen Sie Ihr Glück doch morgen wieder auf die Probe.");		}	}	public function sendPhrase():Void	{		// phrase		var phrase:String = phrase_txt.text;		// validieren		var errors:Array = (new Formprocessor()).checkForm([1, "Begriff", phrase]);		// testen, ob fehler gefunden		if (errors.length != 0) {			// nachricht			message_mc.showMessage("Bitte geben Sie einen Begriff ein!");			// abbrechen			return;		}//		// meldung anzeigen//		message_txt.text = "Daten werden gesendet!";		// button ausblenden		send_btn._visible = false;		// phrase speichern		GameController.getInstance().setPhrase(phrase);		// uid		var uid:Number = GameController.getInstance().getUid();		// begriff pruefen lassen		GameConnector.checkPhrase(uid, phrase, this, "onPhraseChecked");	}	public function onPhraseChecked(re:ResultEvent ):Void	{		// error		var error:Number = Number(re.result);		// message		var message:String = "";		// je nach error		switch (error) {			// unbekannter fehler			case ERROR_UNKNOWN :				message = "Es ist ein unbekannter Fehler aufgetreten.";				break;			// begriff nicht in datenbank			case ERROR_PHRASE_UNKNOWN :				message = "<b>Gewinncode ungültig!</b><br/><a href=\"javascript:openWinCentered('http://www.sskduesseldorf.de/DIV/slotmachine/gcde.gif', 'gewinncode', 300, 250, 'status=yes')\">Sie benötigen noch einen Gewinn-Code?</a>";				break;			// begriff heute schon verwendet			case ERROR_PHRASE_USED :				message = "Diesen Begriff haben Sie heute schon eingegeben. Bitte wählen Sie einen anderen Begriff!";				break;			// begriff in ordnung			case ERROR_NONE :				break;		}		// abbrechen, wenn fehler		if (error != ERROR_NONE) {			// meldung anzeigen			message_mc.showMessage(message);			// button einblenden			send_btn._visible = true;			// abbrechen			return;		}		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onPhraseFinished");		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		};		// abspielen		gotoAndPlay("frClose");	}	public function onPhraseFinished():Void	{		// zur security		mySlotmachineUI.showSecurity();	}}