/* 
 * Generated by ASDT 
*/ 

import com.adgamewonderland.agw.util.*;

import com.adgamewonderland.digitalbanal.elfmeterduell.beans.*;

import com.adgamewonderland.digitalbanal.elfmeterduell.ui.CardUI;

class com.adgamewonderland.digitalbanal.elfmeterduell.ui.NavigationUI extends MovieClip implements IUserListener {
	
	private var card_mc:CardUI;
	
	private var buttons:Array;
	
	private var start_btn:Button;
	
	private var instructions_btn:Button;
	
	private var prices_btn:Button;
	
	private var highscore_btn:Button;
	
	private var login_btn:Button;
	
	private var userdata_btn:Button;
	
	public function NavigationUI() {
		// card
		card_mc = CardUI.getCardUI();
		// buttons
		this.buttons = new Array(start_btn, instructions_btn, prices_btn, highscore_btn, login_btn, userdata_btn);
		
		// start
		start_btn.onRelease = function():Void {
			GameController.getInstance().resetGame();
			SoccerController.getInstance().startSoccer(SoccerController.MODE_OFFENSE);
		};
		// instructions
		instructions_btn.onRelease = function():Void {
			CardUI.getCardUI().showInstructions();
		};
		// prices
		prices_btn.onRelease = function():Void {
			CardUI.getCardUI().showPrices();
		};
		// highscore
		highscore_btn.onRelease = function():Void {
			CardUI.getCardUI().showHighscore();
		};
		// login
		login_btn.onRelease = function():Void {
			CardUI.getCardUI().showLogin();
		};
		// userdata
		userdata_btn.onRelease = function():Void {
			CardUI.getCardUI().showUserdata();
		};
		// userdata ausblenden
		userdata_btn._visible = false;
		
		// als listener registrieren
		GameController.getInstance().addListener(this);
	}
	
	public static function getNavigationUI():NavigationUI
	{
		return (_root.content_mc.navigation_mc);
	}
	
	public function setButtonsEnabled(bool:Boolean ):Void
	{
		// buttons de- / aktivieren
		for (var i:String in buttons) {
			this.buttons[i].enabled = bool;
		}	
	}
	
	public function showNavi(bool:Boolean ):Void
	{
		// ein- / ausblenden
		switch (bool) {
			// einblenden
			case true :
				// aktivieren
				setButtonsEnabled(true);
				// einfaden
				Fader.fade(this, 0, 100, 500, 20);
			
				break;	
			// ausblenden
			case false :
				// deaktivieren
				setButtonsEnabled(false);
				// ausfaden
				Fader.fade(this, 100, 0, 500, 20);
				
				break;
		}	
	}
	
	public function onUserLogin(user:User ):Void
	{
		// login ausblenden
		login_btn._visible = false;
		// userdata einblenden
		userdata_btn._visible = true;
	}
	
	public function onUserLogout(user:User ):Void
	{
		// login einblenden
		login_btn._visible = true;
		// userdata ausblenden
		userdata_btn._visible = false;
		// einblenden
		showNavi(true);
	}
	
	public function onUserUpdate(user:User ):Void
	{
	}
	
	private function onUnload():Void
	{
		// als listener deregistrieren
		GameController.getInstance().removeListener(this);
	}
}