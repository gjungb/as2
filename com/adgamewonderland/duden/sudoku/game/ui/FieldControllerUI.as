/*
 * Generated by ASDT
*/

import com.adgamewonderland.agw.math.Point;
import com.adgamewonderland.duden.sudoku.game.beans.Content;
import com.adgamewonderland.duden.sudoku.game.beans.FieldImpl;
import com.adgamewonderland.duden.sudoku.game.ui.FieldControllerButtonUI;
import com.adgamewonderland.duden.sudoku.game.beans.Grid;

class com.adgamewonderland.duden.sudoku.game.ui.FieldControllerUI extends MovieClip {

	private static var XDIFF:Number = 22;

	private static var YDIFF:Number = 22;

	private static var ROWS:Number = 3;

	private static var COLUMNS:Number = 3;

	private var field:FieldImpl;

	private var buttons:Array;

	public function FieldControllerUI() {
		// alle buttons
		this.buttons = new Array();
	}

	public function onLoad():Void
	{
		// zaehler
		var i:Number = -1;
		// buttons initialisieren
		while (this["b" + (++i) + "_mc"] != undefined) {
			// aktueller button
			var mc:FieldControllerButtonUI = this["b" + i + "_mc"];
			// speichern
			this.buttons.push(mc);
			// callback
			mc.onPress = function() {
				_parent.onSelectButton(this);
			};
		}
		// buttons alphabetisch sortiert anordnen
		sortButtons();
	}

	public function onSelectButton(btn:FieldControllerButtonUI ):Void
	{
		// field informieren
		this.field.changeContent(new Content(btn.getId(), btn.getCharacter()));
	}

	public function setPosition(center:Point ):Void
	{
		// positionieren
		this._x = center.x - this._width / 2;
		this._y = center.y - this._height / 2;
	}

	public function getField():FieldImpl {
		return field;
	}

	public function setField(field:FieldImpl):Void {
		this.field = field;
	}

	private function sortButtons():Void
	{
		// loesungsbegriff
		var term:String = Grid.getInstance().getTerm().getText();
		// als alphabetisch sortiertes array
		var termarr:Array = term.split("").sort();
		// als alphabetisch sortierte hash-map (character als hash)
		var termmap:Object = new Object();
		// hash-map in reihenfolge des arrays fuellen
		for (var i : Number = 0; i < termarr.length; i++) {
			termmap[termarr[i]] = i + 1;
		}
		// zu positionierender button
		var btn:FieldControllerButtonUI;
		// character des buttons
		var character:String;
		// position in alphabetischer reihenfolge
		var pos:Number;
		// neue x-position des buttons
		var xpos:Number = 0;
		// neue y-position des buttons
		var ypos:Number = 0;
		// buttons neu positionieren
		for (var j : Number = 0; j < buttons.length; j++) {
			// aktueller button
			btn = this.buttons[j];
			// character des buttons
			character = btn.getCharacter();
			// position in alphabetischer reihenfolge
			pos = termmap[character];
			// neue x-position des buttons
			xpos = ((pos - 1) % COLUMNS) * XDIFF;
			// neue y-position des buttons
			ypos = Math.floor((pos - 1) / ROWS) * YDIFF;
			// positionieren
			btn._x = xpos;
			btn._y = ypos;
		}
	}

}