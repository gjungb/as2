/* Login** Generated from ArgoUML Model ** ActionScript 2 generator module provided by www.codealloy.com */ /*klasse:			Loginautor: 			gerd jungbluth, adgame-wonderlandnickname:		gerd.jungbluth@adgame-wonderland.dekunde:			n24erstellung: 		21.04.2004 (e-plus)zuletzt bearbeitet:	25.11.2005durch			gjstatus:			in bearbeitung*/import com.meychi.MD5;import com.adgamewonderland.agw.*;import com.adgamewonderland.agw.util.CheckboxUI;import com.adgamewonderland.n24.christmas.User;class com.adgamewonderland.n24.christmas.Login extends MovieClip {	// Attributes		private var _myFile:String; // konfigurationsdatei		private var myXMLConnector:XMLConnector;		private var myFormprocessor:Formprocessor;		private var myPassword:String;		private var myLso:SharedObject;		private var nickname_txt:TextField;		private var password_txt:TextField;		private var message_txt:TextField;		private var loggedin_txt:TextField;		private var scoreday_txt:TextField;		private var scoremax_txt:TextField;		private var login_btn:Button;		private var test_btn:Button;		private var register_btn:Button;		private var play_btn:Button;		private var registertxt_mc:MovieClip;		private var optin_mc:CheckboxUI;		private var optinloader_mc:MovieClip;		private var myInterval:Number;		private var myButtons:Array;		// Operations		public  function Login()	{		// konfigurationsdatei		_myFile = "n24_christmas_xmlconnector.php";		// zum testen pfad angeben		if (_url.indexOf("http://") == -1) _myFile = "http://192.168.0.27/kunden/n24/weihnachtsspiel/game/" +  _myFile;		// xml connector		myXMLConnector = new XMLConnector(this, _myFile);		// form processor		myFormprocessor = new Formprocessor();		// password		myPassword = "";		// lso zum speichern / laden der nickname		myLso = SharedObject.getLocal("n24_christmas");		// buttons		myButtons = [login_btn, test_btn, register_btn];		// formular initialisieren		initForm("login", null);	}		public  function showButtons(bool:Boolean ):Void	{		// schleife ueber alle buttons		for (var i:String in myButtons) myButtons[i]._visible = bool;	}		public  function initForm(form:String, user:User ):Void	{// 		// interval loeschen// 		clearInterval(myInterval);		// je nach formular		switch (form) {			// login			case "login" :				// nickname und password als eingabefelder				nickname_txt.selectable = password_txt.selectable = true;				nickname_txt.type = password_txt.type = "input";				// gespeicherten nickname laden				nickname_txt.text = (typeof myLso.data.nickname != "undefined" ? myLso.data.nickname : nickname_txt.text);				// nickname loeschen bei klick in feld				nickname_txt.onSetFocus = function () {					// ggf. loeschen					if (this.text.toLowerCase() == "nickname") this.text = "";				};				// passwort loeschen bei klick in feld				password_txt.onSetFocus = function () {					// ggf. loeschen					if (this.text.toLowerCase() == "passwort") this.text = "";					// * anzeigen					this.password = true;				};// 				// niemand eingeloggt// 				loggedin_txt.autoSize = "right";// 				loggedin_txt.text = "Logged In: Gast";				// callback beim druecken von "login"				login_btn.onRelease = function () {					this._parent.sendLogin();				};				// callback beim druecken von "test"				test_btn.onRelease = function () {					_global.myPlayground.startGame();				};				// callback beim druecken von "registrieren"				register_btn.onRelease = function () {					_global.myPlayground.showRegister();				};				// optin ausblenden				optin_mc._visible = false;				var callback:Function = function () {					trace(this);				};				optin_mc.watch("status", callback, null);							break;							// loggedin			case "loggedin" :				// abbrechen, wenn schon eingeloggt				if (_currentframe != 1) return;				// buttons ausblenden				showButtons(false);				// hinspringen				gotoAndStop("frLoggedin");				// nickname anzeigen//				nickname_txt.autoSize = "left";				nickname_txt.text = user.nickname;				// user eingeloggt				loggedin_txt.autoSize = "right";				loggedin_txt.text = "Logged In: " + user.nickname;				// optin einblenden				optin_mc._visible = true;				// optin anzeigen				optin_mc.status = (user.optin == 1);				// callback beim druecken von "jetzt spielen"				play_btn.onRelease = function () {					_global.myPlayground.startGame();				};				// punktzahlen laden				getUserScore(user.userid);											break;		}	}		private  function sendLogin():Void	{		// eingaben testen		if (checkForm("login") == false) return;				// nickname und password duerfen nicht editiert werden		nickname_txt.selectable = password_txt.selectable = false;		nickname_txt.type = password_txt.type = "dynamic";		// eingegebenes password MD5en		var password:String = MD5.calculate(password_txt.text);		// xml head		var head:XML = myXMLConnector.getXMLHead("n24_christmas", {obj:"loginProcessor"});		// infos ueber user		var node:XMLNode = myXMLConnector.getXMLNode("user", {nickname:nickname_txt.text, password:password});		// einhaengen		head.firstChild.appendChild(node);		// senden und empfangen		myXMLConnector.sendXML(head, "onLoginLoaded");		// nachricht anzeigen		showMessage("Ihre Daten werden gesendet!");	}		public  function onLoginLoaded(xmlobj:XML ):Void	{		// infos ueber user		var usernode:XMLNode = xmlobj.firstChild.firstChild;		// in object umformen		var info:Object = myXMLConnector.parseXMLNode(usernode);		// user		var user = new User("");				// erfolgreich oder nicht		switch (Boolean(info["loginstatus"])) {			// erfolgreich			case true:						// nickname				user.nickname = nickname_txt.text;				// nickname lokal speichern				myLso.data.nickname = user.nickname;				// speichern				myLso.flush();								// userid				user.userid = info["unum"];				// nickname				user.nickname = info["nickname"];				// loginstatus				user.loginstatus = Boolean(info["loginstatus"]);				// timestamp				user.timestamp = Number(info["timestamp"]);				// optin				user.optin = Number(info["optin"]);								// infos ueber spielrunde				var round:Object = {act : info["actround"], max : info["maxround"], end : info["endround"]};								// nachricht anzeigen				showMessage("Das Login war erfolgreich!");				// password speichern				user.password = MD5.calculate(password_txt.text);				// user und runde an spiel uebergeben und fertig				_global.myPlayground.loginUser(user, round, info["hash"]);				// nickname einblenden				initForm("loggedin", user);				break;							// nicht erfolgreich			default:								// interval loeschen				delete(myInterval);				// nachricht anzeigen				showMessage("Das Login ist fehlgeschlagen!");				// formular einblenden				initForm("login", null);		}	}		private function getUserScore(unum:Number ):Void	{		// xml head		var head:XML = myXMLConnector.getXMLHead("n24_christmas", {obj:"userscoreProcessor"});		// infos ueber 		var node:XMLNode = myXMLConnector.getXMLNode("userscore", {unum : unum});		// einhaengen		head.firstChild.appendChild(node);		// senden und empfangen		myXMLConnector.sendXML(head, "onUserscoreLoaded");	}		public function onUserscoreLoaded(xmlobj:XMLNode ):Void	{		// infos ueber user		var usernode:XMLNode = xmlobj.firstChild.firstChild;		// in object umformen		var info:Object = myXMLConnector.parseXMLNode(usernode);		// punkte heute anzeigen		scoreday_txt.autoSize = "left";		scoreday_txt.text = String(info.scoreday);		// punkte gesamt anzeigen		scoremax_txt.autoSize = "left";		scoremax_txt.text = String(info.scoremax);	}		public function setOptin(optin:Boolean ):Void	{		// loader einblenden		optinloader_mc._visible = true;		// unum		var unum:Number = _global.myPlayground.user.userid;		// xml head		var head:XML = myXMLConnector.getXMLHead("n24_christmas", {obj:"optinProcessor"});		// infos ueber 		var node:XMLNode = myXMLConnector.getXMLNode("user", {unum : unum, optin : (optin ? 1 : 0)});		// einhaengen		head.firstChild.appendChild(node);		// senden und empfangen		myXMLConnector.sendXML(head, "onOptinLoaded");	}		public function onOptinLoaded(xmlobj:XMLNode ):Void	{		// loader ausblenden		optinloader_mc._visible = false;	}		private function checkForm(type:String ):Boolean	{		// je nach formular		switch (type) {			// login			case "login" :				// validieren, ob 1. korrekte nickname adresse, 2. nicht leeres passwort				var errors:Array = myFormprocessor.checkForm([1, "Nickname", nickname_txt.text, 1, "Passwort", password_txt.text]);				// testen, ob fehler gefunden				if (errors.length != 0) {					// nachricht					showMessage("Bitte f√ºllen Sie alle Felder korrekt aus!");										// abbrechen					return false;									}				// alles in ordnung				return true;							break;		}	}		private  function showMessage(msg:String ):Void	{		// anzeigen		message_txt.autoSize = "left";		message_txt.text = msg;	}} /* end class Login */