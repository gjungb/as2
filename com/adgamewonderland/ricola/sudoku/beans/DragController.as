import com.adgamewonderland.ricola.sudoku.interfaces.IDraggable;import com.adgamewonderland.ricola.sudoku.ui.BoexliUI;import com.adgamewonderland.aldi.sudoku.beans.Content;/** * @author gerd */class com.adgamewonderland.ricola.sudoku.beans.DragController {	private static var instance : DragController;	private var container:MovieClip;	private var dragged:BoexliUI;	/**	 * @return singleton instance of DragController	 */	public static function getInstance() : DragController {		if (instance == null)			instance = new DragController();		return instance;	}	public function startDrag(contentid:Number, xpercent:Number, ypercent:Number ):Void	{		// x-position des boexli		var xpos:Number = getContainer()._xmouse - (xpercent * BoexliUI.WIDTH / 100);		// y-position des boexli		var ypos:Number = getContainer()._ymouse - (ypercent * BoexliUI.HEIGHT / 100);		// konstruktor fuer position unter maus		var constructor:Object = {_x : xpos, _y : ypos};		// neues boexli		var mc:BoexliUI = BoexliUI(getContainer().attachMovie("BoexliUI", "dragged_mc", getContainer().getNextHighestDepth(), constructor));		// gedraggtes objekt		setDragged(mc);		// callback		mc.onStartDrag(contentid);		// draggen		mc.startDrag(false, getContainer()._x, getContainer()._y, getContainer()._width, getContainer()._height);	}	public function doDrag():Void	{	}	public function stopDrag():Number	{		// abbrechen, wenn nicht am draggen		if (getDragged() == null) return Content.CONTENT_EMPTY;		// contentid des gedraggten objekts		var contendid:Number = getDragged().getContentid();		// draggen beenden		getDragged().stopDrag();		// callback		getDragged().onStopDrag();		// kein gedraggtes objekt		setDragged(null);		// contentid zurueck geben		return contendid;	}	public function setContainer(mc:MovieClip ):Void	{		this.container = mc;	}	public function getContainer():MovieClip	{		return this.container;	}	public function setDragged(mc:BoexliUI ):Void	{		this.dragged = mc;	}	public function getDragged():BoexliUI	{		return this.dragged;	}	private function DragController() {		// container, an den das gedraggte objekt attached wird		this.container = null;		// gedraggtes objekt		this.dragged = null;	}}