/*
 * Generated by ASDT
*/

import mx.remoting.Service;
import mx.remoting.PendingCall;
import mx.rpc.RelayResponder;
import mx.rpc.FaultEvent;
import mx.rpc.ResultEvent;
import mx.remoting.debug.NetDebug;
import com.adgamewonderland.ricola.sudoku.beans.Test;
import com.adgamewonderland.ricola.sudoku.beans.Participant;

class com.adgamewonderland.ricola.sudoku.connectors.HighscoreConnector {

	private static var myGatewayURL:String = "http://webbox/flashservices/gateway.php";

	private static var myRemoteObject:String = "com.adgamewonderland.ricola.sudoku.connectors.SudokuConnector";

	private static var myService:Service;

	// score speichern
	public static function putScore(nickname:String, email:String, score:Number, difficulty:Number, security:String, caller:Object, callback:String ):Void
	{
		// authentifizieren
		getService().connection.setCredentials("player", security);
		// senden
		var pc:PendingCall = getService().putScore(nickname, email, score, difficulty);
		// rueckgabe von rmi auswerten
		pc.responder = new RelayResponder(caller, callback, "onConnectorFault");
	}

	// highscoreliste laden
	public static function getHighscore(difficulty:Number, caller:Object, callback:String ):Void
	{
		// senden
		var pc:PendingCall = getService().loadHighscorelist(difficulty);
		// rueckgabe von rmi auswerten
		pc.responder = new RelayResponder(caller, callback, "onConnectorFault");
	}

	// teilnehmer speichern
	public static function saveParticipant(participant:Participant, caller:Object, callback:String ):Void
	{
		// senden
		var pc:PendingCall = getService().saveParticipant(participant);
		// rueckgabe von rmi auswerten
		pc.responder = new RelayResponder(caller, callback, "onConnectorFault");
	}

//	// teilnehmer speichern
//	public static function saveParticipantData(firstname:String, lastname:String, street:String, postcode:String, city:String, email:String, phoneprefix:String, phoneextension:String, optin:Boolean, caller:Object, callback:String ):Void
//	{
//		// zu sendende daten
//		var participant = new Participant();
//		// firstname
//		participant.setFirstname(firstname);
//		// lastname
//		participant.setLastname(lastname);
//		// street
//		participant.setStreet(street);
//		// postcode
//		participant.setPostcode(postcode);
//		// city
//		participant.setCity(city);
//		// email
//		participant.setEmail(email);
//		// phoneprefix
//		participant.setPhoneprefix(phoneprefix);
//		// phoneextension
//		participant.setPhoneextension(phoneextension);
//		// optin
//		participant.setOptin(optin);
//		// senden
//		var pc:PendingCall = getService().saveParticipant(participant);
//		// rueckgabe von rmi auswerten
//		pc.responder = new RelayResponder(caller, callback, "onConnectorFault");
//	}

	private static function getService():Service
	{
		// testen, ob service schon instantiiert
		if (myService instanceof Service == false) {
			// debugger
			NetDebug.initialize();
			// offline / online
			if (_url.indexOf("http://") == -1) {
				// remoting service mit url
				myService = new Service(myGatewayURL, null, myRemoteObject, null, null);
			} else {
				// remoting service ohne url
				myService = new Service("", null, myRemoteObject, null, null);
			}
		}
		// zurueck geben
		return myService;
	}
}