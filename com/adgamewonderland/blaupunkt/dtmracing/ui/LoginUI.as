/*  * Generated by ASDT */ /*klasse:			LoginUIautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			blaupunkterstellung: 		08.06.2005zuletzt bearbeitet:	08.08.2005durch			gjstatus:			in bearbeitung*/import mx.rpc.ResultEvent;import mx.rpc.FaultEvent;import com.adgamewonderland.agw.*;import com.adgamewonderland.agw.net.*;import com.adgamewonderland.agw.util.*;import com.adgamewonderland.blaupunkt.dtmracing.challenge.*;import com.adgamewonderland.blaupunkt.dtmracing.remoting.*;import com.adgamewonderland.blaupunkt.dtmracing.ui.*;class com.adgamewonderland.blaupunkt.dtmracing.ui.LoginUI extends MovieClip {		private var myDtmRacingUI:DtmRacingUI;		private var myLso:SharedObject;		private var email_txt:TextField;		private var password_txt:TextField;		private var message_txt:TextField;		private var login_btn:Button;		private var guest_btn:Button;		private var register_btn:Button;		public function LoginUI()	{		// hauptzeitleiste		myDtmRacingUI = DtmRacingUI(_parent);		// lso zum speichern / laden der email		myLso = SharedObject.getLocal("dtmracing");		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "init");		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}	}		public function init():Void	{	 	// button login	 	login_btn.onRelease = function () {	 		this._parent.sendLogin();	 	};	 	// button register	 	register_btn.onRelease = function () {	 		this._parent.showRegister();	 	};	 	// button guest	 	guest_btn.onRelease = function () {	 		this._parent.guestLogin();	 	};	 	// key login	 	var klsnr:Object = {_parent : this};	 	klsnr.onKeyUp = function () {	 		if (Key.getCode() == Key.ENTER) this._parent.sendLogin();	 	}	 	Key.addListener(klsnr);		// gespeicherte email laden		email_txt.text = (typeof myLso.data.email != "undefined" ? myLso.data.email : email_txt.text);		// ggf. email aus herausforderungs- / siegerehrungs mail		if (_root.email != "null" && _root.email != undefined) email_txt.text = _root.email;	}		public function showRegister():Void	{		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onLoginFinished", DtmRacingUI.NEXT_REGISTER);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}		// abspielen		gotoAndPlay("frClose");	}		public function sendLogin():Void	{		// validieren, ob 1. korrekte email adresse, 2. nicht leeres passwort		var errors:Array = (new Formprocessor()).checkForm([3, "E-Mail", email_txt.text, 1, "Passwort", password_txt.text]);		// testen, ob fehler gefunden		if (errors.length != 0) {			// nachricht			message_txt.text = "Eingaben nicht korrekt!";			// abbrechen			return;		}		// meldung anzeigen		message_txt.text = "Daten werden gesendet!";		// button ausblenden		login_btn._visible = false;		// userdaten laden lassen		ChallengeConnector.loginUser(email_txt.text.toLowerCase(), password_txt.text, this, "onUserLoaded");	}		public function guestLogin():Void	{		// als gast einloggen		ChallengeController.getInstance().onLoginGuest();		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onLoginFinished", DtmRacingUI.NEXT_CHALLENGE);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}		// abspielen		gotoAndPlay("frClose");	}		public function onUserLoaded(re:ResultEvent ):Void	{		// testen, ob login erfolgreich		if (re.result.status != User.STATUS_SUCCESS) {			// meldung anzeigen			message_txt.text = "Login fehlgeschlagen!";			// button einblenden			login_btn._visible = true;			// abbrechen			return;			}		// meldung anzeigen		message_txt.text = "Login erfolgreich!";		// neuer user		var user:User = User(RemotingBeanCaster.getCastedInstance(new User(), re.result));		// email lokal speichern		myLso.data.email = user.getEmail();		// speichern		myLso.flush();		// einloggen		ChallengeController.getInstance().onLoginUser(user);				// fragen, ob main, siegerehrung oder challenge		var next:Number = myDtmRacingUI.getNext();		// testen, ob der user eingeloggt, der auf email reagieren sollte		if (user.getEmail() != _root.email) {			// keine challenge			ChallengeController.getInstance().initChallenge();			// zur main			next = DtmRacingUI.NEXT_MAIN;			}				// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onLoginFinished", next);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}		// abspielen		gotoAndPlay("frClose");	}		public function onLoginFinished(next:Number ):Void	{		// zur main		if (next == DtmRacingUI.NEXT_MAIN) {			myDtmRacingUI.showMain();		// zur registrierung		} else if (next == DtmRacingUI.NEXT_REGISTER) {			myDtmRacingUI.showRegister();		// zur herausforderung (nur als gast)		} else if (next == DtmRacingUI.NEXT_CHALLENGE) {			myDtmRacingUI.showChallenge();		// zur siegerehrung		} else if (next == DtmRacingUI.NEXT_AWARD) {			myDtmRacingUI.showAward();		}	}		public function onConnectorFault(fe:FaultEvent ):Void	{   		trace("There was a problem: " + fe.fault.faultstring);	   	trace("The faultcode is: " + fe.fault.faultcode);	 	trace("The detail: " + fe.fault.detail);	   	trace("The error class name is: " + fe.fault.type);	}	} /* end class LoginUI */