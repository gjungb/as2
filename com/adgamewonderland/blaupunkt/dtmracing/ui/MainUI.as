/*  * Generated by ASDT */ /*klasse:			MainUIautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			blaupunkterstellung: 		08.06.2005zuletzt bearbeitet:	08.08.2005durch			gjstatus:			in bearbeitung*/import mx.rpc.ResultEvent;import mx.rpc.FaultEvent;import com.adgamewonderland.agw.*;import com.adgamewonderland.agw.net.*;import com.adgamewonderland.agw.util.*;import com.adgamewonderland.blaupunkt.dtmracing.challenge.*;import com.adgamewonderland.blaupunkt.dtmracing.remoting.*;import com.adgamewonderland.blaupunkt.dtmracing.ui.*;class com.adgamewonderland.blaupunkt.dtmracing.ui.MainUI extends MovieClip {		private var myDtmRacingUI:DtmRacingUI;		private var back_metal_mc:MovieClip;		private var main_info_mc:InfoboxMainUI;		private var highscore_mc:HighscoreUI;		private var opponent_txt:TextField;		private var message_txt:TextField;		private var challenge_btn:Button;		private var training_btn:Button;		public function MainUI()	{		// hauptzeitleiste		myDtmRacingUI = DtmRacingUI(_parent);		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "init");		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}	}		public function init():Void	{	 	// button herausfordern	 	challenge_btn.onRelease = function () {	 		this._parent.initChallenge(this._parent.opponent_txt.text);	 	};	 	// button training	 	training_btn.onRelease = function () {	 		this._parent.initTraining();	 	};		// metal hochfahren		back_metal_mc.showMetal(true);		// infoboxen initialisieren		main_info_mc.initInfobox(ChallengeDetail.MODE_CHALLENGER);	}		public function initChallenge(email:String ):Void	{		// challenge initialisieren		ChallengeController.getInstance().initChallenge();		// validieren, ob 1. korrekte email adresse		var errors:Array = (new Formprocessor()).checkForm([3, "E-Mail", email]);		// testen, ob fehler gefunden		if (errors.length != 0) {			// nachricht			message_txt.text = "Eingaben nicht korrekt!";			// abbrechen			return;		}		// testen, ob selbst herausgefordert		if (email == ChallengeController.getInstance().getUser().getEmail()) {			// nachricht			message_txt.text = "Anderen Gegner wählen!";			// abbrechen			return;		}		// meldung anzeigen		message_txt.text = "Herausforderung wird gestartet!";		// button ausblenden		challenge_btn._visible = false;		// details ueber gegner laden lassen		ChallengeConnector.loadOpponent(email, this, "onOpponentLoaded");	}		public function acceptChallenge(challenge:Challenge ):Void	{		// speichern		ChallengeController.getInstance().setChallenge(challenge);		// details ueber gegner laden lassen (war urspruenglich challenger)		ChallengeConnector.loadOpponent(challenge.getChallengerDetail().getEmail(), this, "onOpponentLoaded");	}		public function onOpponentLoaded(re:ResultEvent ):Void	{		// neuer gegner		var opponent:User = User(RemotingBeanCaster.getCastedInstance(new User(), re.result));		// testen, ob bekannter gegner		if (re.result.status != User.STATUS_SUCCESS) {			// meldung anzeigen			message_txt.text = "Neuer Gegner!";		} else {			// meldung anzeigen			message_txt.text = "Bekannter Gegner!";		}		// gegner speichern		ChallengeController.getInstance().setOpponent(opponent);		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onMainFinished", DtmRacingUI.NEXT_CHALLENGE);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}		// abspielen		gotoAndPlay("frClose");	}		public function showAward(challenge:Challenge ):Void	{		// speichern		ChallengeController.getInstance().setChallenge(challenge);		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onMainFinished", DtmRacingUI.NEXT_AWARD);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}		// abspielen		gotoAndPlay("frClose");	}		public function initTraining():Void	{		// trainingsmodus		ChallengeController.getInstance().onTraining();		// abspielen verfolgen		var follower:TimelineFollower = new TimelineFollower(this, "onMainFinished", DtmRacingUI.NEXT_CHALLENGE);		// abspielen verfolgen		onEnterFrame = function() {			follower.followTimeline();		}		// abspielen		gotoAndPlay("frClose");	}		public function onMainFinished(next:Number ):Void	{		// zur challenge		if (next == DtmRacingUI.NEXT_CHALLENGE) {			myDtmRacingUI.showChallenge();		// zum award		} else if (next == DtmRacingUI.NEXT_AWARD) {			myDtmRacingUI.showAward();		}	}		public function getInfobox():InfoboxMainUI	{		// zurueck geben		return main_info_mc;	}		public function getHighscore():HighscoreUI	{		// zurueck geben		return highscore_mc;	}}