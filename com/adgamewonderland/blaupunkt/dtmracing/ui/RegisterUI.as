/* 
 * Generated by ASDT 
*/ 

/*
klasse:			RegisterUI
autor: 			gerd jungbluth, adgame-wonderland
email:			gerd.jungbluth@adgame-wonderland.de
kunde:			blaupunkt
erstellung: 		08.06.2005
zuletzt bearbeitet:	08.08.2005
durch			gj
status:			in bearbeitung
*/

import mx.rpc.ResultEvent;
import mx.rpc.FaultEvent;

import com.meychi.*;

import com.adgamewonderland.agw.*;

import com.adgamewonderland.agw.util.*;

import com.adgamewonderland.blaupunkt.dtmracing.challenge.*;

import com.adgamewonderland.blaupunkt.dtmracing.remoting.*;

import com.adgamewonderland.blaupunkt.dtmracing.ui.*;

class com.adgamewonderland.blaupunkt.dtmracing.ui.RegisterUI extends MovieClip {
	
	private var myDtmRacingUI:DtmRacingUI;
	
	private var myLso:SharedObject;
	
	private var email_txt:TextField;
	
	private var nickname_txt:TextField;
	
	private var password1_txt:TextField;
	
	private var password2_txt:TextField;
	
	private var message_txt:TextField;
	
	private var address_mc:AddressUI;
	
	private var meta_transition_mc:MovieClip;
	
	private var register_btn:Button;
	
	private var back_btn:Button;
	
	public function RegisterUI()
	{	
		// hauptzeitleiste
		myDtmRacingUI = DtmRacingUI(_parent);
		// lso zum speichern / laden der email
		myLso = SharedObject.getLocal("dtmracing");
		// abspielen verfolgen
		var follower:TimelineFollower = new TimelineFollower(this, "init");
		// abspielen verfolgen
		onEnterFrame = function() {
			follower.followTimeline();
		}
	}
	
	public function init():Void
	{
	 	// button register
	 	register_btn.onRelease = function () {
	 		this._parent.sendRegister();
	 	};
	 	// button zurueck
	 	back_btn.onRelease = function () {
	 		this._parent.stopRegister();
	 	};
		// tabsetter
		var index:Number = 0;
		email_txt.tabIndex = ++index;
		nickname_txt.tabIndex = ++index;
		password1_txt.tabIndex = ++index;
		password2_txt.tabIndex = ++index;
	 	// metal ausblenden
	 	meta_transition_mc.showMetal(true);
	}
	
	public function stopRegister():Void
	{
		// abspielen verfolgen
		var follower:TimelineFollower = new TimelineFollower(this, "onRegisterFinished");
		// abspielen verfolgen
		onEnterFrame = function() {
			follower.followTimeline();
		}
		// abspielen
		gotoAndPlay("frClose");
	}
	
	public function sendRegister():Void
	{
		// email
		var email:String = email_txt.text.toLowerCase();
		// nickname
		var nickname:String = nickname_txt.text;
		// password
		var password:String = password1_txt.text;
		// address
		var address:UserAddress = address_mc.getAddress();
		// abbrechen, wenn adresse fehlerhaft
		if (address == null) return;
		
		// validieren, ob 1. korrekte email adresse, 2. nicht leerer nickname, 3. nicht leeres passwort
		var errors:Array = (new Formprocessor()).checkForm([3, "E-Mail", email, 1, "Nickname", nickname, 1, "Passwort 1", password]);
		// testen, ob fehler gefunden
		if (errors.length != 0 || password1_txt.text != password2_txt.text) {
			// nachricht
			message_txt.text = "Eingaben nicht korrekt!";
			// abbrechen
			return;
		}
		// meldung anzeigen
		message_txt.text = "Daten werden gesendet!";
		// button ausblenden
		register_btn._visible = false;
		
		// neuer user
		var user:User = new User(null, email, MD5.calculate(password), nickname, address);
		// user registrieren lassen
		ChallengeConnector.registerUser(user, this, "onUserRegistered");
	}
	
	public function onUserRegistered(re:ResultEvent ):Void
	{
		// testen, ob register erfolgreich
		if (Number(re.result) != User.STATUS_SUCCESS) {
			// meldung anzeigen
			message_txt.text = "Registrierung fehlgeschlagen!";
			// button einblenden
			register_btn._visible = true;
			// abbrechen
			return;	
		}
		// meldung anzeigen
		message_txt.text = "Registrierung erfolgreich!";
		// email lokal speichern
		myLso.data.email = email_txt.text;
		// speichern
		myLso.flush();
		// abspielen verfolgen
		var follower:TimelineFollower = new TimelineFollower(this, "onRegisterFinished");
		// abspielen verfolgen
		onEnterFrame = function() {
			follower.followTimeline();
		}
		// abspielen
		gotoAndPlay("frClose");
	}
	
	public function onRegisterFinished():Void
	{
		// zum login
		myDtmRacingUI.showLogin();
	}
	
}