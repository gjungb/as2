/*klasse:			Taskautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			skandiaerstellung: 		03.12.2004zuletzt bearbeitet:	20.01.2005durch			gjstatus:			final*/import com.adgamewonderland.skandia.akademietool.loaders.*;import com.adgamewonderland.skandia.akademietool.quiz.*;class com.adgamewonderland.skandia.akademietool.quiz.Task {	// Attributes		private var myIndex:Number;		private var myTid:Number;		private var myQuestion:Question;		private var myExplanation:Explanation;		private var myImage:Image;		private var myDifficulty:Difficulty;		private var myAnswers:Array;		private var myHint:Hint;		private var isSolved:Boolean;		private var myScore:Number;		// Operations		// konstruktor	public function Task(index:Number, tdesc:QuizContentTask )	{		// index der aufgabe im quiz		myIndex = index;		// id der aufgabe		myTid = tdesc.getTid();		// frage		myQuestion = new Question(tdesc.getQuestion());		// erklaerung		myExplanation = new Explanation(tdesc.getExplanation(), new Image(tdesc.getExplanationimg().getSrc(), tdesc.getExplanationimg().getWidth(), tdesc.getExplanationimg().getHeight()));		// abbildung		myImage = new Image(tdesc.getImage().getSrc(), tdesc.getImage().getWidth(), tdesc.getImage().getHeight());		// schwierigkeitsgrad		myDifficulty = new Difficulty(tdesc.getDifficulty());		// antworten		myAnswers = [];		// antworten		var answers:Array = tdesc.getAnswers();		// schleife ueber alle antworten		for (var i:String in answers) {			// neue antwort			myAnswers.push(new Answer(answers[i].getText(), answers[i].getCorrect()));		}		// hinweis auf anzahl korrekter antworten		myHint = new Hint(getNumCorrAnswers());		// vom user beantwortet		isSolved = false;		// punktzahl fuer das korrekte beantworten		myScore = 1;	}		public function get index():Number	{		// index der aufgabe im quiz		return (myIndex);	}		public function get question():Question	{		//  frage		return (myQuestion);	}		public function get explanation():Explanation	{		// erklaerung		return (myExplanation);	}		public function get image():Image	{		// abbildung		return (myImage);	}		public function get difficulty():Difficulty	{		// schwierigkeitsgrad		return (myDifficulty);	}		public function get answers():Array	{		//  antworten		return (myAnswers);	}		public function get hint():Hint	{		//  hinweis auf anzahl korrekter antworten		return (myHint);	}		public function getScore():Number	{		// schleife ueber alle antworten		for (var i:String in myAnswers) {			// kein punkt, wenn eine antwort falsch			if (myAnswers[i].getScore() == 0) return 0;		}		// punktzahl fuer das beantworten		return (myScore);	}		private function getNumCorrAnswers():Number	{		// anzahl korrekter antworten		var corranswers:Number = 0;		// schleife ueber alle antworten		for (var i:String in myAnswers) corranswers += Number(myAnswers[i].correct);		// zurueck geben		return (corranswers);	}	} /* end class Task */