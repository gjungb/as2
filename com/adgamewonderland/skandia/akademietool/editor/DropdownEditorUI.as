/*klasse:			DropdownEditorUIautor: 			gerd jungbluth, adgamewonderlandemail:			gerd.jungbluth@adgamewonderland.dekunde:			skandiaerstellung: 		03.04.2005zuletzt bearbeitet:	03.04.2005durch			gjstatus:			final*/ class com.adgamewonderland.skandia.akademietool.editor.DropdownEditorUI extends com.adgamewonderland.skandia.akademietool.quiz.DropdownUI {		private var _myWidth:Number;		private var myId:String;		public function DropdownEditorUI() {		// vererbte eigenschaften		super();		// eindeutige id		myId = "";		// breite aus komponentenparameter		setWidth(_myWidth != _width ? _myWidth : _width);	}		public function set id(str:String ):Void	{		// eindeutige id		myId = str;	}		public function showItems(bool:Boolean ):Void 	{		// aktivitaet umschalten		isDropped = bool;		// zaehler		var i:Number = -1;		// schleife ueber alle werte		while (++i < myItems.length) {			// ein oder aus			switch (bool) {				// aufbauen				case true :					// position auf buehne					var pos:Object = {x : 0, y : (i + 1) * _myYDiff};					// text des items					var name:String = myItems[i].name;					// item duplizieren					var item:MovieClip = item_mc.duplicateMovieClip("item" + i + "_mc", i, {_x : pos.x, _y : pos.y, myNum : i, myName : name});					// breite text im item					var tw:Number = item.name_txt._width * _xscale / 100;					// text im item invers skalieren					item.name_txt._xscale = 100 / _xscale * 100;					// text im item auf urspruengliche breite					item.name_txt._width = tw;					// callback bei druecken					item.onRelease = function () {						// dieses item auswaehlen						this._parent.onSelectItem(this.myNum);					}					break;								// abbauen				case false :					// loeschen					this["item" + i + "_mc"].removeMovieClip();						break;			}		}	}		public function resetDropdownUI():Void	{		// name anzeigen		name_txt.text = _myName;		// kein aktuell ausgewaehltes item		current = null;	}		// callback beim druecken eines items	public function onSelectItem(num:Number ):Void	{		// entsprechendes item		var item:Object = myItems[num];		// text des items		name_txt.text = item.name;		// aktuell angezeigtes item		current = item.value;		// callback ausfuehren		_myCaller[_myCallback](myId, item.value, this);		// items ausblenden		showItems(false);	}		private function setWidth(width:Number ):Void	{		// skalierung		var scale:Number = Math.round(width / item_mc._width * 100);		// komplett skalieren		_xscale = scale;		// breite textfeld		var tw:Number = name_txt._width * scale / 100;		// textfeld invers skalieren		name_txt._xscale = 100 / scale * 100;		// textfeld auf urspruengliche breite		name_txt._width = tw;	}}