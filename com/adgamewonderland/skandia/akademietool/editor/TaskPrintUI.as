/*klasse:			TaskPrintUIautor: 			gerd jungbluth, adgamewonderlandemail:			gerd.jungbluth@adgamewonderland.dekunde:			skandiaerstellung: 		03.04.2005zuletzt bearbeitet:	05.04.2005durch			gjstatus:			final*/import mx.rpc.ResultEvent;import mx.rpc.FaultEvent;import mx.remoting.RecordSet;import mx.utils.Iterator;import com.adgamewonderland.skandia.akademietool.editor.*;class com.adgamewonderland.skandia.akademietool.editor.TaskPrintUI extends TaskListUI {		private var myTidsPrint:Array;		private var myAllSelected:Boolean;		private var toggle_btn:Button;		private var print_btn:Button;		public function TaskPrintUI()	{		// vererbte eigenschaften		super();		// tids der aufgaben, die gedruckt werden sollen		myTidsPrint = [];		// alle items zum drucken ausgewaehlt		myAllSelected = false;		// alle aus- / abwaehlen button		toggle_btn.onRelease = function() {			this._parent.toggleSelection();		};		// auswahl drucken button		print_btn.onRelease = function() {			this._parent.loadTaskListPrint();		};	}		public function onSelectItem(tid:Number ):Void	{		// ausgewaehltes item		var item:TaskPrintItemUI = myTaskListItems[tid];		// an- / abwaehlen		item.selected = !item.selected;	}		public function toggleSelection():Void	{		// alle items zum drucken ausgewaehlt		myAllSelected = !myAllSelected;		// schleife ueber alle items		for (var i:String in myTaskListItems) myTaskListItems[i].selected = myAllSelected;	}		public function loadTaskListPrint():Void	{		// tids der aufgaben, die gedruckt werden sollen		myTidsPrint.splice(0);		// schleife ueber alle items		for (var i:Number = 0; i < myTaskListItems.length; i++) if(myTaskListItems[i].selected) myTidsPrint.push(myTaskListItems[i].item["TID"]);		// liste laden lassen		EditorConnector.loadTaskListPrint(myTidsPrint, this, "onTaskListPrintLoaded");		// loader anzeigen		myEditorUI.showLoader(true, "Aufgaben werden geladen");	}		public function onTaskListPrintLoaded(re:ResultEvent ):Void	{		// loader ausblenden		myEditorUI.showLoader(false);		// zu druckende aufgaben		var tasks:Object = re.result;		// schleife ueber zu druckende aufgaben		for (var i:Number = 0; i < tasks.length; i++) {			// aktuelle aufgabe			var task:Object = tasks[i];			// schwierigkeitsgrad als string			task.difficulty = myEditorUI.dropdowncontent.difficulties[task.difficulty - 1];			// themengebiet als string			task.topic = myEditorUI.dropdowncontent.topics[task.topic - 1];			// aktivitaet als string			task.active = (["nicht aktiv", "aktiv"][task.active]);			// autor als string			task.supplier = myEditorUI.dropdowncontent.suppliers[task.supplier - 1];		}		// drucken		printTasks(tasks);	}		private function printTasks(tasks:Object ):Void	{				// neuer druckjob		var pj:PrintJob = new PrintJob();		// druck-dialog anzeigen		var started:Boolean = pj.start();		// abbrechen, wenn drucken nicht erwuenscht		if (!started) {			// druckjob loeschen			delete pj;			// abbrechen			return;		}		// neues movieclip fuer druckausgabe		var print_mc:MovieClip = this.createEmptyMovieClip("print_mc", getNextHighestDepth());		// aktuelle seite		var page:Number = 0;		// hoehe einer seite		var pheight:Number = 780;		// y-position des naechsten TaskListItems		var ypos:Number = 0;		// schleife ueber ausgewaehlte aufgaben		for (var j:Number = 0; j < tasks.length; j++) {			// aktuelles item			var item:Object = tasks[j];			// tiefe fuer attachen			var depth:Number = print_mc.getNextHighestDepth();			// konstruktor fuer neues TaskListItem			var constructor:Object = {_y : ypos, _myItem : item, _myBack : false};			// attachen			var taskprintitem_mc:TaskPrintItemUI = TaskPrintItemUI(print_mc.attachMovie("taskPrintItemUI", "taskprintitem" + depth + "_mc", depth, constructor));			// naechste y-position			ypos += taskprintitem_mc._height;						// testen, ob seite voll bzw. alle items durch			if(Math.floor(print_mc._height / pheight) > page || j == myTidsPrint.length - 1) {				// neue seite				page ++;				// groesse des druckbereichs				var dims:Object = {xMin : 0, xMax : print_mc._width, yMin : (page - 1) * pheight, yMax : print_mc._height};				// seite in warteschlange				pj.addPage(targetPath(print_mc), dims, null, 1);			}		}		// an drucker schicken		pj.send();		// druckausgabe loeschen		print_mc.removeMovieClip();	}}