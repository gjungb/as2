/*klasse:			XMLContentLoaderautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			skandiaerstellung: 		03.12.2004zuletzt bearbeitet:	20.01.2005durch			gjstatus:			in bearbeitung*/import com.adgamewonderland.agw.*;import com.adgamewonderland.skandia.akademietool.interfaces.*;import com.adgamewonderland.skandia.akademietool.loaders.*;class com.adgamewonderland.skandia.akademietool.loaders.XMLContentLoader extends GenericLoader implements IContentLoader {	// Attributes		private var myXMLConnector:XMLConnector;		// Operations		// konstruktor	public function XMLContentLoader()	{		// eigenschaften des GenericLoader		super();		// contentdatei		var xmlfile:String = "skandia_akademietool_quiz_content.xml";// 		// zum testen pfad angeben// 		if (_level0._url.indexOf("http://") == -1) xmlfile = "http://192.168.0.27/test/game/" +  xmlfile;		// xml connector		myXMLConnector = new XMLConnector(this, xmlfile);	}		// 	public function addConsumer(con:IContentConsumer ):Void	{		// neuer consumer		myConsumers.push(con);	}		// 	public function loadContent():Void	{		// content laden		myXMLConnector.loadXML("onContentLoaded");	}		//	public function onContentLoaded(xmlobj:XML ):Void	{		// content object		var content:QuizContent = new QuizContent();				// content geladen		var contentNode:XMLNode = xmlobj.firstChild;		// aufgaben		var tasks:Array = contentNode.childNodes;		// schleife ueber alle aufgaben		for  (var i:String in tasks) {			// aktuelle aufgabe			var taskNode:XMLNode = tasks[i];			// id			var tid:Number = Number(taskNode.attributes["tid"]);			// difficulty			var difficulty:Number = Number(taskNode.attributes["difficulty"]);			// question			var question:String = taskNode.firstChild.firstChild.nodeValue;			// question node loeschen			taskNode.firstChild.removeNode();			// image object			var image:QuizContentImage = new QuizContentImage(taskNode.firstChild.attributes["src"], Number(taskNode.firstChild.attributes["width"]), Number(taskNode.firstChild.attributes["height"]));			// image node loeschen			taskNode.firstChild.removeNode();			// explanation			var explanation:String = taskNode.firstChild.firstChild.nodeValue;			// explanationimg object			var explanationimg:QuizContentImage = new QuizContentImage(taskNode.firstChild.attributes["imgsrc"], Number(taskNode.firstChild.attributes["imgwidth"]), Number(taskNode.firstChild.attributes["imgheight"]));			// explanation node loeschen			taskNode.firstChild.removeNode();						// task object			var task:QuizContentTask = new QuizContentTask(tid, difficulty, question, image, explanation, explanationimg);						// antworten			var answers:Array = taskNode.firstChild.childNodes;			// schleife ueber alle antworten			for (var j:String in answers) {				// aktuelle antwort				var answerNode:XMLNode = answers[j];				// text				var astr:String = answerNode.firstChild.nodeValue;				// correct				var correct:Boolean = (answerNode.attributes["correct"] == 1 ? true : false);								// answer object				var answer:QuizContentAnswer = new QuizContentAnswer(astr, correct);								// zur task hinzufuegen				task.addAnswer(answer);			}						// zum content hinzufuegen			content.addTask(task);		}		// consumer informieren		for (var i:String in myConsumers) myConsumers[i].setContent(content);	}	} /* end class XMLContentLoader */