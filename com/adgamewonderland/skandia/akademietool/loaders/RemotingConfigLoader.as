/*klasse:			RemotingConfigLoaderautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			skandiaerstellung: 		16.12.2004zuletzt bearbeitet:	01.03.2005durch			gjstatus:			final*/import mx.remoting.Service;import mx.remoting.PendingCall;import mx.rpc.RelayResponder;import mx.rpc.FaultEvent;import mx.rpc.ResultEvent;import com.adgamewonderland.skandia.akademietool.interfaces.*;import com.adgamewonderland.skandia.akademietool.loaders.*;class com.adgamewonderland.skandia.akademietool.loaders.RemotingConfigLoader extends RemotingLoader implements IConfigLoader {	// Attributes		// Operations		// konstruktor	public function RemotingConfigLoader()	{		// eigenschaften des RemotingLoader		super();	}		public function addConsumer(con:IConfigConsumer ):Void	{		// neuer consumer		myConsumers.push(con);	}		public function loadConfig():Void	{		// config laden		var pc:PendingCall = myService.getConfig(myLoadParams["topic"]);		// rueckgabe von rmi auswerten		pc.responder = new RelayResponder(this, "onConfigLoaded", "getConfig_Fault");	}		public function onConfigLoaded(re:ResultEvent ):Void	{		// geladene config (als QuizConfigBean)		var infos:Object = re.result;		// quiz konfiguration		var config:QuizConfig = new QuizConfig(infos["numtasks"], infos["difficulties"], infos["time"], infos["topic"], infos["topicdesc"]);		// consumer informieren		for (var i:String in myConsumers) myConsumers[i].setConfig(config);	}		public function getConfig_Fault(fe:FaultEvent):Void	{	}	} /* end class RemotingConfigLoader */