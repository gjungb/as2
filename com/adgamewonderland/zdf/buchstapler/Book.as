/* Book** Generated from ArgoUML Model ** ActionScript 2 generator module provided by www.codealloy.com */ /*klasse:			Bookautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			zdferstellung: 		14.06.2004zuletzt bearbeitet:	27.06.2004durch			gjstatus:			in bearbeitung*/import com.adgamewonderland.zdf.buchstapler.*import com.adgamewonderland.agw.*class com.adgamewonderland.zdf.buchstapler.Book extends MovieClip {	// Attributes		private var myDepth:Number;		private var myBack:MovieClip;		private var myGlow:MovieClip;		private var myCharacter:String;		private var myText:TextField;		private var myParent:MovieClip;		private var myPosition:Point;		private var myWidth:Number;		private var mySpeed:Number = 0;		private var myAcceleration:Number = 0;		private var isSelectable:Boolean;		private var isDragging:Boolean;		private var back_mc:MovieClip, glow_mc:MovieClip, text_txt:TextField;		// Operations		public  function Book()	{		// tiefe		myDepth = getDepth();		// buchruecken		myBack = back_mc;		// glow, der anzeigt, dass das buch gedraggt werden darf		myGlow = glow_mc;		// buchstabe (im constructor uebergeben)// 		myCharacter = String.fromCharCode(Math.floor(97 + Math.random() * 26));		// textfeld		myText = text_txt;		// anzeigen		myText.autoSize = "center";		myText.text = myCharacter.toUpperCase();// 		// aktuelles parent (stack, room, board) (im constructor uebergeben)// 		myParent;		// testen, ob im stapel		if (myParent instanceof Stack) {			// um -90 oder 90 grad drehen			_rotation = (Math.random() < 0.5 ? -90 : 90);			// x-position verschieben, da registrierpunkt nicht in mitte			_x += (_rotation < 0 ? _width / 2 : - _width / 2);			// geschwindigkeit			mySpeed = myParent.speed;			// beschleunigung			myAcceleration = myParent.acceleration;			// bewegen			onEnterFrame = moveBook;		}		// aktuelle position		myPosition = new Point(_x, _y);		// definierte breite		myWidth = 20;		// callback bei press auf buchruecken		back_mc.onPress = function () {			// buch auswaehlen			this._parent.selectBook();		}		// callback bei loslassen der maus		onMouseUp = function () {			// abbrechen, falls nicht am draggen			if (!dragging) return;			// buch abwaehlen			dropBook();		}		// auswaehlbar oder nicht		selectable = false;		// wird gerade gedraggt oder nicht		dragging = false;	}		public  function get depth():Number	{		// zurueck geben		return (myDepth);	}		public  function get parent():MovieClip	{		// zurueck geben		return (myParent);	}		public  function set selectable(bool:Boolean ):Void	{		// auswaehlbar oder nicht		isSelectable = bool;		// button umschalten		back_mc.enabled = bool;	}		public  function set dragging(bool:Boolean ):Void	{		// wird gerade gedraggt oder nicht		isDragging = bool;	}		public  function get dragging():Boolean	{		// zurueck geben		return (isDragging);	}		public  function set position(pos:Point ):Void	{		// aktuelle position		myPosition = pos;	}		public  function get position():Point	{		// zurueck geben		return (myPosition);	}		public  function get width():Number	{		// zurueck geben		return (myWidth);	}		public  function get character():String	{		// zurueck geben		return (myCharacter);	}		private function moveBook():Void	{		// beschleunigen		mySpeed += myAcceleration;		// bewegen		myPosition.y += mySpeed;		// maximale y-position		var ymax:Number = myParent.ymax;		// testen, ob angekommen		if (myPosition.y >= ymax) {			// auf maximalposition			myPosition.y = ymax;			// stack mitteilen, dass angekommen			myParent.changeStack("add", this);			// auswaehlbar machen// 			selectable = true;			// bewegen beenden			delete(onEnterFrame);		}		// positionieren		_y = myPosition.y;		// position speichern		position = new Point(_x, _y);	}		public function selectBook():Void	{		// sound abspielen		_root.sound_mc.spieleSound("buchnehmen", 1);		// je nach parent		if (myParent instanceof Stack) {			// aus stapel entfernen			myParent.changeStack("remove");		} else if (myParent instanceof Board) {			// aus board entfernen			myParent.removeBook(this);		}		// drehen		_rotation = 0;		// draggen		onEnterFrame = dragBook;	}		public function dragBook():Void	{		// am draggen		dragging = true;		// an maus haengen		_x = _root._xmouse;		_y = _root._ymouse;		// position speichern		position = new Point(_x, _y);		// bewegung verfolgen		myParent = _global.Room.onDragBook(this);	}		public function dropBook():Void	{		// nicht am draggen		dragging = false;		// draggen beenden		delete(onEnterFrame);		// auswaehlbar machen		selectable = true;		// einsortieren		myParent = _global.Room.onDropBook(this);	}		private function onUnload():Void	{		// abmelden		_global.Room.onRemoveBook(this);	}} /* end class Book */