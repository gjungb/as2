import com.adgamewonderland.agw.Formprocessor;
/*
 * Generated by ASDT
*/
class com.adgamewonderland.eplus.baseclip.ui.InputUI extends MovieClip {
	private var errormcs:Array;

	private var message_txt:TextField;

	private var formprocessor:Formprocessor;
	public function InputUI() {
		// auf der buehne angezeigte fehler movieclips		this.errormcs = new Array();
		// nachricht linksbuendig
//		message_txt.autoSize = "left";
		// formprocessor zur validierung der eingaben
		this.formprocessor = new Formprocessor();
	}

	public function getFormprocessor():Formprocessor
	{
		return this.formprocessor;
	}

	private function showErrors(errors:Array ):Void
	{
		// fehlerboxen loschen
		if (errors.length == 0) {
			// schleife ueber fehlerboxen
			for (var j : String in errormcs) {
				// aktueller fehlerpfeil
				errormcs[j].removeMovieClip();
			}
			// array leeren
			this.errormcs.splice(0);

		// fehlerboxen anzeigen
		} else {
			// schleife ueber fehler
			for (var i:String in errors) {
				// fehler (name der variable)
				var error:String = errors[i];
				// textfeld oder movieclip
				var target:Object;
				if (this[error + "_txt"] instanceof TextField) {
					target = this[error + "_txt"];
				} else if (this[error + "_mc"] instanceof MovieClip) {
					target = this[error + "_mc"];
				}
				// testen, ob gefunden
				if (target == undefined) continue;
				// mitte
				var xpos:Number = target._x + target._width / 2;
				var ypos:Number = target._y + target._height / 2;
				// groesse
				var width:Number = target._width * 1.02;
				var height:Number = target._height * 1.1;
				// constructor
				var constructor:Object = {_x : xpos, _y : ypos, _width : width, _height : height};
				// neue fehlerbox
				var mc:MovieClip = this.attachMovie("ErrorUI", "error" + error + "_mc", getNextHighestDepth(), constructor);
				// speichern
				this.errormcs.push(mc);
			}
		}
	}

	private function showMessage(text:String ):Void
	{
		// nachricht anzeigen
		message_txt.text = text;
	}

	private function setEditable(bool:Boolean ):Void
	{
		// aktuelles textfeld
		var field:TextField;
		// schleife ueber alle textfelder
		for (var i:String in this) {
			// testen, ob textfeld
			if (this[i] instanceof TextField) {
				field = this[i];
			} else {
				continue;
			}
			// editierbar oder nicht
			field.selectable = bool;
		}
	}}