import com.adgamewonderland.eplus.basecasting.beans.impl.CastingImpl;import com.adgamewonderland.eplus.basecasting.beans.impl.CityImpl;import com.adgamewonderland.eplus.basecasting.controllers.CitiesController;import com.adgamewonderland.eplus.basecasting.ui.CastinglistUI;import com.adgamewonderland.eplus.basecasting.ui.CastingselectorUI;import flash.geom.Point;/** * @author gerd */class com.adgamewonderland.eplus.basecasting.ui.ScheduleUI extends CastinglistUI {	private static var LISTX:Number = -285; // -291;	private static var LISTY:Number = -210; // -135;	private static var LISTHEIGHT:Number = 400; // 330;	private static var LISTSCALE:Number = 100;	private static var SELECTORXDIFF:Number = 2;	private static var SELECTORYDIFF:Number = 0;	private var headline_txt:TextField;	private var line_mc:MovieClip;	function ScheduleUI() {		// headline linksbuendig		headline_txt.autoSize = "left";	}	public function onLoad():Void	{		// aktuelle stadt		var city:CityImpl = CitiesController.getInstance().getCurrentcity();		// name der stadt in headline anzeigen		headline_txt.text = headline_txt.text + city.getName();		// linie anzeigen		line_mc._x = headline_txt._x;		line_mc._width = headline_txt._width;		// zur karte springen		gotoAndStop(city.getID() + 1);		// castingtermine loeschen		hideDates();		// castingtermine anzeigen		showDates(city);	}	private function initList():Void	{		// liste mit selectors auf buehne		list_mc = this.createEmptyMovieClip("list_mc", 1);		// positionieren		list_mc._x = LISTX;		list_mc._y = LISTY;		// array mit selectors auf buehne		this.selectoruis = new Array();		// aktuelles casting		var casting:CastingImpl;		// datum des castings		var date:Date = new Date();		// soll das datum angeigt werden		var showdate:Boolean = true;		// selector auf buehne		var ui:CastingselectorUI;		// position des selectors auf buehne		var pos:Point = new Point(0, 0);		// schleife ueber alle castings		for (var i:Number = 0; i < this.castings.length; i++) {			// casting			casting = castings[i];			// pruefen, ob neues datum			if (casting.getDate().getTime() != date.getTime()) {				// datum des castings				date = casting.getDate();				// datum soll angezeigt werden				showdate = true;			} else {				// datum soll nicht angezeigt werden				showdate = false;			}			// auf buehne bringen			ui = addSelector(casting, pos, i, showdate, false);			// verkleinern, damit alle passen			ui._xscale = ui._yscale = LISTSCALE;			// naechste position berechnen			if (pos.y > LISTHEIGHT - ui._height) {				// neue spalte				pos.offset(ui._width + SELECTORXDIFF, -pos.y);			} else {				// neue zeile				pos.offset(0, ui._height + SELECTORYDIFF);			}		}	}}