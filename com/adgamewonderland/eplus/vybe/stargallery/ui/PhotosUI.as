import mx.transitions.easing.Strong;import mx.transitions.Tween;import mx.utils.Collection;import mx.utils.Delegate;import mx.utils.Iterator;import com.adgamewonderland.agw.util.Mask;import com.adgamewonderland.eplus.vybe.stargallery.beans.Artist;import com.adgamewonderland.eplus.vybe.stargallery.beans.Photo;import com.adgamewonderland.eplus.vybe.stargallery.controllers.GalleryController;import com.adgamewonderland.eplus.vybe.stargallery.ui.ThumbnailUI;import flash.geom.Point;/** * @author gerd */class com.adgamewonderland.eplus.vybe.stargallery.ui.PhotosUI extends MovieClip {	private static var LISTX:Number = 3;	private static var LISTY:Number = 42;	private static var LISTWIDTH:Number = 196;	private static var LISTHEIGHT:Number = 250;	private static var ASSETXDIFF:Number = 5;	private static var ASSETYDIFF:Number = 3;	private static var TWEENDURATION:Number = 2;	private var artist:Artist;	private var photouis:Array;	private var list_mc:MovieClip;	private var fade_mc:MovieClip;	private var mask_mc:MovieClip;	private var next_mc:MovieClip;	private var previous_mc:MovieClip;	function PhotosUI() {		// anzuzeigende artist		this.artist = null;		// ausblenden		_visible = false;		// naechstes photo des aktuellen kuenstlers		next_mc.onRelease = Delegate.create(this, doNext);		// vorheriges photo des aktuellen kuenstlers		previous_mc.onRelease = Delegate.create(this, doPrevious);	}	public function showPhotos(artist:Artist):Void	{		// einblenden		_visible = true;		// anzuzeigende artist		this.artist = artist;		// liste aufbauen		initList();		// erstes photo des kuenstlers		GalleryController.getInstance().selectPhoto(Photo(artist.getPhotos().getItemAt(0)));	}	public function hidePhotos():Void	{		// liste resetten		reset();		// ausblenden		_visible = false;	}	private function doNext():Void	{		// naechstes photo des aktuellen kuenstlers		GalleryController.getInstance().selectPhoto(GalleryController.getInstance().getNextPhoto());	}	private function doPrevious():Void	{		// vorheriges photo des aktuellen kuenstlers		GalleryController.getInstance().selectPhoto(GalleryController.getInstance().getPreviousPhoto());	}	private function initList():Void	{		// liste mit photos auf buehne		list_mc = this.createEmptyMovieClip("list_mc", 1);		// positionieren		list_mc._x = LISTX;		list_mc._y = LISTY;		// array mit photos auf buehne		this.photouis = new Array();		// alle photos aus repository		var photos:Collection = this.artist.getPhotos();		// aktuelles photo		var photo:Photo;		// photo auf buehne		var ui:ThumbnailUI;		// position des photos auf buehne		var pos:Point = new Point(0, 0);		// counter		var id:Number = 0;		// schleife ueber alle photos		var iterator:Iterator = photos.getIterator();		while (iterator.hasNext()) {			// photo			photo = Photo(iterator.next());			// auf buehne bringen			ui = addThumbnail(photo, pos, ++id);			// naechste position berechnen			if ((pos.x + 2 * ui._width + ASSETXDIFF) > this._width) {				// nach unten und links				pos.offset(-pos.x, ui._height + ASSETYDIFF);			} else {				// nach rechts				pos.offset(ui._width + ASSETXDIFF, 0);			}		}		// maske fuer liste der photos auf buehne		var mask:Mask = new Mask(this, list_mc, new com.adgamewonderland.agw.math.Rectangle(LISTX, LISTY, LISTWIDTH, LISTHEIGHT));		// maskieren		mask.drawMask();		// fader einblenden		// vor die liste positionieren//		fade_mc.swapDepths(list_mc.getDepth() + 1);		// was soll gewteent werden		var prop:String = "_alpha";		// startwert		var begin:Number = 100;		// endwert		var finish:Number = 0;		// neuer tween		var tween:Tween = new Tween(fade_mc, prop, Strong.easeOut, begin, finish, TWEENDURATION, true);	}	private function reset():Void	{		// alle photos von buehne loeschen		for (var i:String in this.photouis) {			// loeschen			ThumbnailUI(this.photouis[i]).removeMovieClip();		}		// array mit photos leeren		this.photouis = new Array();		// liste loeschen		list_mc.removeMovieClip();		// maske loeschen		mask_mc.removeMovieClip();	}	/**	 * fuegt ein movieclip fuer ein photo hinzu	 * @param photo photo, das auf der buehne angezeigt werden soll	 */	private function addThumbnail(photo:Photo, pos:Point, id:Number ):ThumbnailUI	{		// movieclip		var ui:ThumbnailUI;		// konstruktor		var constructor:Object = new Object();		// position		constructor._x = pos.x;		constructor._y = pos.y;		// photo		constructor._photo = photo;		// auf buehne		ui = ThumbnailUI(list_mc.attachMovie("ThumbnailUI", "photo" + id + "_mc", list_mc.getNextHighestDepth(), constructor));		// hinzufuegen zu array mit photos auf buehne		this.photouis[id] = ui;		// zurueck geben		return ui;	}}