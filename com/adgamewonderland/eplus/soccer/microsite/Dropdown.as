/* Dropdown** Generated from ArgoUML Model ** ActionScript 2 generator module provided by www.codealloy.com */ /*klasse:			Dropdownautor: 			gerd jungbluth, adgame-wonderlandemail:			gerd.jungbluth@adgame-wonderland.dekunde:			epluserstellung: 		17.05.2004zuletzt bearbeitet:	07.06.2004durch			gjstatus:			in bearbeitung*/class com.adgamewonderland.eplus.soccer.microsite.Dropdown extends MovieClip {	// Attributes		private var _myName:String;		private var _myItems:Array, _myValues:Array, _myCallback:String;		private var _myYDiff:Number;		private var myItems:Object, myCount:Number, myCallback:String, myYDiff:Number;		private var isDropped:Boolean;		private var select_mc:MovieClip;	 	private var name_txt:TextField;		// Operations		public  function Dropdown()	{		// anzuzeigende items und die dazu gehoerigen werte		myItems = {};		// anzahl der items		myCount = 0;		// callback bei klick auf ein item		myCallback = "";		// y-abstand zwischen den items		myYDiff = 0;		// schalter, ob dropdown ausgeklappt ist		isDropped = false;		// button aktivieren		select_mc.onRelease = function () {			this._parent.onPressBack();		}		// initialisieren		initDropdown(_myName, _myItems, _myValues, _myCallback, _myYDiff);	}		public  function initDropdown(name:String, items:Array, values:Array, callback:String, ydiff:Number ):Void	{		// name		name_txt.text = name;		// auto size		name_txt.autoSize = "left";		// schleife ueber alle items		for (var i in items) {			// neuer wert			myItems[items[i]] = values[i];			// zaehlen			myCount ++;		}		// callback bei klick auf ein item		myCallback = callback;		// y-abstand zwischen den items		myYDiff = ydiff;	}		public  function showItems(bool:Boolean ):Void 	{		// aktivitaet umschalten		isDropped = !isDropped;		// zaehler		var counter:Number = -1;		// schleife ueber alle werte		for (var i in myItems) {			// zaehler hochzaehlen			counter ++;			// ein oder aus			switch (bool) {				// aufbauen				case true :					// position auf buehne					var pos:Object = {x : 0, y : (myCount - counter) * myYDiff};					// anzuzeigender text					var name:String = i;					// item attachen					var item:MovieClip = this.attachMovie("dropdown item", "item" + counter + "_mc", counter, {_x : pos.x, _y : pos.y, myName : name});					// callback bei druecken					item.onRelease = function () {						// dieses item auswaehlen						this._parent.onSelectItem(this.myName);					}									break;								// abbauen				case false :					// loeschen					this["item" + counter + "_mc"].removeMovieClip();						break;			}		}	}		// callback beim druecken des dropdowns	public function onPressBack():Void	{		// items ein- / ausblenden		showItems(!isDropped);	}		// callback beim druecken eines items	public function onSelectItem(name:String ):Void	{		// wert		var value = myItems[name];		// callback ausfuehren		_parent[myCallback](value);		// hinspringen// 		_parent.gotoAndPlay(frame);		// name		name_txt.text = name;		// items ausblenden		showItems(false);	}} /* end class Dropdown */