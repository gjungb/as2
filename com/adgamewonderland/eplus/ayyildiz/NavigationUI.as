/* 
 * Generated by ASDT 
*/ 

import com.adgamewonderland.eplus.ayyildiz.*;

class com.adgamewonderland.eplus.ayyildiz.NavigationUI extends MovieClip {
	
	public static var DELIMITER:String = ",";
	
	private static var PERCENT_BORDER:Number = 10;
	
	private static var LANGUAGE_TR:String = "0";
	
	private static var LANGUAGE_DE:String = "1";
	
	private static var LANGUAGE_DEFAULT:String = LANGUAGE_DE;
	
	private var myInitialId:String;
	
	private var myPages:Pages;
	
	private var myNavisMain:Array;
	
	private var myNaviMainAct:NaviMainUI;
	
	private var myLanguage:String;
	
	private var myBanner:String;
	
	private var myShowBanner:Boolean;
	
	private var myShowLanguage:Boolean;
	
	private var height_txt:TextField;
	
	private var mouse_txt:TextField;
	
	private var bannerPlatz_mc:MovieClip;
	
	private var bannerLoader_mc:MovieClip;
	
	private var language_mc:MovieClip;
	
	public function NavigationUI() 
	{
		// initiale id, die an swf uebergeben wird
		myInitialId = "";
		// alle seiten der website
		myPages = new Pages();
		// registrierte hauptnavigationspunkte
		myNavisMain = new Array();
		// aktuell ausgeklappter hauptnavigationspunkt
		myNaviMainAct = null;
		// aktuelle sprache
		myLanguage = LANGUAGE_DEFAULT;
		// name des zu ladenen banners
		myBanner = "";
		// soll ein banner geladen werden
		myShowBanner = false;
		// soll die sprache auswaehlbar sein
		myShowLanguage = true;
	}
	
	public function init(id:String, pageorder:String, language:String, banner:String, hw:String ):Void
	{
		// vollständiger pfad zur bestellung
		if (pageorder != undefined) myPages.setPageOrder(pageorder);
		// aktuelle sprache
		if (language != undefined && language != "") this.language = language;
		// name des zu ladenen banners
		if (banner != undefined) this.banner = banner;
		// soll die sprache auswaehlbar sein
		if (hw != undefined) this.showlanguage = (hw == "false");
		// initiale navi anzeigen
		if (id != undefined) showNavi(id);
	}
	
	public function showNavi(id:String ):Void
	{
		// initiale id, die an swf uebergeben wird
		this.initialid = id;
		// id hauptnavigation
		var idmain:Number = Number(initialid.split(DELIMITER)[0]);
		// hauptnavigationspunkt
		var mc:NaviMainUI = myNavisMain[idmain];
		// neuer aktuell ausgeklappter hauptnavigationspunkt
		navimainact = mc;
		
		// banner laden
		if (this.myBanner != "") {
			// nach pause laden
			var interval:Number;
			// funktion
			var doLoad:Function = function(target:MovieClip, banner:String ):Void {
				// laden
				target.bannerLoader_mc.loadBanner(banner);
				// interval loeschen
				clearInterval(interval);
			}
			// laden
			interval = setInterval(doLoad, 100, _root, this.banner + (this.language == LANGUAGE_DE ? "_de.swf" : "_tr.swf"));
		}
		
		// hart einblenden (DEBUG: animation darf erst am schluss aufgerufen werden, da sonst variablen verloren gehen)
		mc.showAnimation(NaviMainUI.ANIMATION_NONE);
		
		// im bestellprozess (idmain 3) nur home, tarife, handys)
		for (var i : String in myNavisMain) {
			// hauptmenuepunkte
			mc = myNavisMain[i];
			// ein- /ausblenden, wenn im bestellprozess
			if (idmain == "3") {
				switch (mc.id) {
					case 0:case 2:case 6:
						mc._visible = true;
						break;
					default:
						mc._visible = false;
				}
			} else {
				mc._visible = true;
			}
		}
		
		// sprachumschaltung nur, wenn keine hardware im wk
		language_mc._visible = showlanguage;
	}

	public function set initialid(str:String ):Void
	{
		// initiale id, die an swf uebergeben wird
		myInitialId = str;
	}
	
	public function get initialid():String
	{
		// initiale id, die an swf uebergeben wird
		return myInitialId;
	}
	
	public function set navimainact(mc:NaviMainUI ):Void
	{
		// aktuell ausgeklappter hauptnavigationspunkt
		myNaviMainAct = mc;
	}
	
	public function get navimainact():NaviMainUI
	{
		// aktuell ausgeklappter hauptnavigationspunkt
		return myNaviMainAct;
	}
	
	public function set language(str:String ):Void
	{
		// aktuelle sprache
		myLanguage = str;
	}
	
	public function get language():String
	{
		// aktuelle sprache
		return myLanguage;
	}
	
	public function set banner(str:String ):Void
	{
		// name des zu ladenen banners
		this.myBanner = str;
	}
	
	public function get banner():String
	{
		// name des zu ladenen banners
		return this.myBanner;
	}
	
	public function set showlanguage(bool:Boolean ):Void
	{
		// soll die sprache auswaehlbar sein
		this.myShowLanguage = bool;
	}

	public function get showlanguage():Boolean
	{
		// soll die sprache auswaehlbar sein
		return this.myShowLanguage;
	}

	public function registerNaviMain(mc:NaviMainUI, id:Number ):Boolean
	{
		// hauptnavigationspunkt speichern
		myNavisMain[id] = mc;
		
		return true;
	}
	
	public function registerButtonSub(id:String ):Boolean
	{
		// soll dieser submenuepunkt unterstrichen sein 
		var selected:Boolean = false;
		// testen, ob von aussen uebergebene id
		if (id == initialid) selected = true;
		// zurueck geben
		return selected;
	}
	
	public function swapNavi(mc:NaviMainUI ):Void
	{
		// abbrechen, wenn aktuell ausgeklappter hauptnavigationspunkt
		if(mc == navimainact) return;
		// aktuell ausgeklappter hauptnavigationspunkt
		var act:NaviMainUI = navimainact;
		// resetten
		if (act != null) act.resetNavi();
		// neuer aktuell ausgeklappter hauptnavigationspunkt
		navimainact = mc;
		// weich einblenden
		mc.showAnimation(NaviMainUI.ANIMATION_IN);
	}
	
	public function hideNavi(mc:NaviMainUI ):Void
	{
		// schleife ueber alle registrierten hauptnavigationspunkte
		for (var i:String in myNavisMain) {
			// aktueller hauptnavigationspunkt
			var main:NaviMainUI = myNavisMain[i];
			// resetten
			if (mc != main) main.resetNavi();
		}
	}
	
	public function openPage(id:String ):Void
	{
		// entsprechende seite
		var page:String = myPages.getPage(id);
		// seite oeffnen
		if (page.indexOf("javascript") == -1) {
			getURL(page + "?sl=" + this.language);
		} else {
			getURL(page, "");	
		}
	}
	
	private function resetNavi():Void
	{
		// id hauptnavigation
		var idmain:Number = Number(initialid.split(DELIMITER)[0]);
		// initialer hauptnavigationspunkt
		var mc:NaviMainUI = myNavisMain[idmain];
		// aktuell ausgeklappter hauptnavigationspunkt
		var act:NaviMainUI = navimainact;
		// resetten
		if (act != null && act != mc) act.init();
		// navi zum ausgangszustand resetten
		showNavi(initialid);
	}
	
	private function onMouseMove():Void
	{
		// testen, ob mauszeiger oben oder unten raus
		var outside:Boolean = (_ymouse > Stage.height * (100 - PERCENT_BORDER) / 100 || _ymouse < Stage.height * PERCENT_BORDER / 100);
		// navi zum ausgangszustand resetten
		if (outside) resetNavi();
	}
}