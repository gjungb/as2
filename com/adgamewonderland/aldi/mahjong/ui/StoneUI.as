/* 
 * Generated by ASDT 
*/ 

import com.adgamewonderland.aldi.mahjong.raster.Stein;
import com.adgamewonderland.aldi.mahjong.ui.GameUI;

class com.adgamewonderland.aldi.mahjong.ui.StoneUI extends MovieClip {
	
	private var stone:Stein;		// wird im initobj uebergeben
	
	private var motif:Number;		// wird im initobj uebergeben
	
	private var game:GameUI;		// wird im initobj uebergeben
	
	private var selected:Boolean;
	
	private var hidden:Boolean;
	
	private var hitarea_btn:Button;
	
	private var outline_mc:MovieClip;
	
	private var color_mc:MovieClip;
	
	private var cover_mc:MovieClip;
	
	public function StoneUI() {
		// aenderungen des motivs ueberwachen
		watch("motif", onSetMotif, null);
		// im initobj uebergebenes motif setzen
		setMotif(motif);
		// ueberwachen ob ausgewaehlt 
		watch("selected", onSetSelected, null);
		// nicht ausgewaehlt
		setSelected(false);
		// ueberwachen ob abgedeckt 
		watch("hidden", onSetHidden, null);
		// nicht abgedeckt
		setHidden(false);
		
		// button
		hitarea_btn.onRelease = function() {
			// auswaehlen
			this._parent.game.onSelectStone(this._parent);
		};
	}
	
	public function onSetMotif(prop:String, oldval:Number, newval:Number ):Number
	{
		// hinspringen
		gotoAndStop(newval);
		// neuen wert setzen
		return newval;
	}
	
	public function onSetSelected(prop:String, oldval:Boolean, newval:Boolean ):Boolean
	{
		// faerbung ein- / ausblenden
		color_mc._visible = newval;
		// neuen wert setzen
		return newval;
	}
	
	public function onSetHidden(prop:String, oldval:Boolean, newval:Boolean ):Boolean
	{
		// cover ein- / ausblenden
		cover_mc._visible = newval;
		// button de- / aktivieren
		hitarea_btn.enabled = !newval;
		// neuen wert setzen
		return newval;
	}
	
	public function getMotif():Number {
		return motif;
	}

	public function setMotif(motif:Number):Void {
		this.motif = motif;
	}

	public function getStone():Stein {
		return stone;
	}

	public function setStone(stone:Stein):Void {
		this.stone = stone;
	}

	public function getSelected():Boolean {
		return selected;
	}

	public function setSelected(selected:Boolean):Void {
		this.selected = selected;
	}

	public function getHidden():Boolean {
		return hidden;
	}

	public function setHidden(hidden:Boolean):Void {
		this.hidden = hidden;
	}

}