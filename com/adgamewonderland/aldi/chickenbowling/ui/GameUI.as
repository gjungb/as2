/* 
 * Generated by ASDT 
*/ 

import de.kruesch.math.*;
import de.kruesch.osterspiel.actors.*;
import de.kruesch.osterspiel.logic.*;
import de.kruesch.osterspiel.ui.*;

import com.adgamewonderland.aldi.chickenbowling.ui.*;

class com.adgamewonderland.aldi.chickenbowling.ui.GameUI extends MovieClip {
	
	private var SCORE_HUHN:Array = new Array(5, 10, 15);
	
	private var SCORE_GOAL:Number = 25;
	
	private var SCORE_BONUS:Number = 25;
	
	private var game:OsterGame;
	
	private var nest_mc:MovieClip;
	
	private var ei_mc:Ball;
	
	private var hase_mc:Kicker;
	
	private var controller_mc:KickController;
	
	private var score:Number;
	
	private var score_mc:MovieClip;
	
	private var display_mc:DisplayUI;
	
	public function GameUI() {
		// ausblenden
		_visible = false;
		// punktzahl
		score = 0;
	}
	
	public function startGame():Void
	{
		// einblenden
		_visible = true;
		// punktzahl
		score = 0;
		// display resetten
		display_mc.showScore(0);
	
		this.game = new OsterGame(this, controller_mc , ei_mc, hase_mc);
		this.game.start();
		this.game.addListener(this);
	}
	
	public function onGameOver():Void
	{
		_root.mcSound.setSound("haseerwischt");
		// nach pause highscoreliste anzeigen
		var interval:Number;
		// funktion
		var doStart:Function = function(target:GameUI ):Void {
			// highscoreliste anzeigen
			_root.mcHighscore.showGameover(target.getScore());
			// weiter auf hauptzeitleiste
			_root.gotoAndStop("frGameover");
			// interval loeschen
			clearInterval(interval);
		}
		// umschalten
		interval = setInterval(doStart, 2000, this);
	}
	
	public function onKickOff():Void
	{
		
		_root.mcSound.setSound("eischiessen");
	}
	
	public function onBonusHit():Void
	{
		addScore(SCORE_BONUS);
		
		_root.mcSound.setSound("wagentreffer");
	}
	
	public function onBonusStart():Void
	{
		
		_root.mcSound.setSound("wagenkommt");
	}
	
	public function onBonusEnd():Void
	{
	}
	
	public function onEnemyHit(huhnTyp):Void
	{
		addScore(SCORE_HUHN[huhnTyp - 1]);
		
		_root.mcSound.setSound("huhntreffer");
	}
	
	public function onEnemyCollision(huhnTyp):Void
	{
		
		_root.mcSound.setSound("huhntreffer");
	}
	
	public function onGoal():Void
	{
		addScore(SCORE_GOAL);
		
		_root.mcSound.setSound("nesttreffer");
		
		score_mc.showScore(SCORE_GOAL);
	}
	
	public function addScore(score:Number ):Void
	{
		// addieren
		setScore(getScore() + score);
		// anzeigen
		display_mc.showScore(getScore());	
	}
	
	public function getScore():Number {
		return score;
	}

	public function setScore(score:Number):Void {
		this.score = score;
	}

	public function getGame():OsterGame {
		return game;
	}

	public function setGame(game:OsterGame):Void {
		this.game = game;
	}

}