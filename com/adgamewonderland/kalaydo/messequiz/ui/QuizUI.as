import com.adgamewonderland.kalaydo.messequiz.controllers.QuizController;import com.adgamewonderland.kalaydo.messequiz.interfaces.IQuizControllerListener;import mx.utils.Delegate;import com.adgamewonderland.kalaydo.messequiz.ui.AnswerUI;/** * @author gerd */class com.adgamewonderland.kalaydo.messequiz.ui.QuizUI extends MovieClip implements IQuizControllerListener {	private var count_txt:TextField;	private var blendeFrage_mc:MovieClip;	private var blendeAntwort_mc:MovieClip;	private var next_btn:Button;	function QuizUI() {		// anzahl linksbuendig		count_txt.autoSize = "left";	}	public function onLoad():Void	{		// als listener registrieren		QuizController.getInstance().addListener(this);		// beim quiz controller anmelden		QuizController.getInstance().initQuiz(this);		// button weiter		next_btn.onRelease = Delegate.create(this, doNext);		// weiter button ausblenden		next_btn._visible = false;	}	public function onUnload():Void	{		// als listener deregistrieren		QuizController.getInstance().removeListener(this);	}	public function getNumTasks():Number	{		// anzahl der aufgaben		return (_totalframes - 1);	}	public function showTask(aTask:Number, aCurrenttask:Number, aTotaltasks:Number ):Void	{		// anzahl anzeigen		count_txt.text = aCurrenttask + "/" + aTotaltasks;		// blenden		blendeAntwort_mc.gotoAndPlay(1);		blendeFrage_mc.gotoAndPlay(1);		// weiter button ausblenden		next_btn._visible = false;		// hinspringen		gotoAndStop(aTask + 1);		// aktuelle antwort		var answer:AnswerUI;		// schleife ueber antworten		for (var i : String in this) {			if (this[i] instanceof AnswerUI) {				// aktuelle antwort				answer = AnswerUI(this[i]);				// antwort initialisieren				answer.onLoad();			}		}	}	public function onTaskSolved(aCorrect:Boolean, aFigures:Array ):Void	{		// weiter button einblenden		next_btn._visible = true;		// aktuelle antwort		var answer:AnswerUI;		// schleife ueber antworten		for (var i : String in this) {			if (this[i] instanceof AnswerUI) {				// aktuelle antwort				answer = AnswerUI(this[i]);				// antwort deaktivieren				answer.enabled = false;				// korrekte antwort anzeigen				if (aCorrect == false)					answer.highlightCorrect();			}		}	}	public function onQuizFinished(aWon:Boolean ):Void	{	}	public function onGuessFinished(aWon:Boolean ):Void	{	}	private function doNext():Void	{		// naechste aufgabe		QuizController.getInstance().nextTask();	}}